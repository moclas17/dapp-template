"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@solana-program";
exports.ids = ["vendor-chunks/@solana-program"];
exports.modules = {

/***/ "(ssr)/./node_modules/@solana-program/system/dist/src/index.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@solana-program/system/dist/src/index.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ADVANCE_NONCE_ACCOUNT_DISCRIMINATOR: () => (/* binding */ ADVANCE_NONCE_ACCOUNT_DISCRIMINATOR),\n/* harmony export */   ALLOCATE_DISCRIMINATOR: () => (/* binding */ ALLOCATE_DISCRIMINATOR),\n/* harmony export */   ALLOCATE_WITH_SEED_DISCRIMINATOR: () => (/* binding */ ALLOCATE_WITH_SEED_DISCRIMINATOR),\n/* harmony export */   ASSIGN_DISCRIMINATOR: () => (/* binding */ ASSIGN_DISCRIMINATOR),\n/* harmony export */   ASSIGN_WITH_SEED_DISCRIMINATOR: () => (/* binding */ ASSIGN_WITH_SEED_DISCRIMINATOR),\n/* harmony export */   AUTHORIZE_NONCE_ACCOUNT_DISCRIMINATOR: () => (/* binding */ AUTHORIZE_NONCE_ACCOUNT_DISCRIMINATOR),\n/* harmony export */   CREATE_ACCOUNT_DISCRIMINATOR: () => (/* binding */ CREATE_ACCOUNT_DISCRIMINATOR),\n/* harmony export */   CREATE_ACCOUNT_WITH_SEED_DISCRIMINATOR: () => (/* binding */ CREATE_ACCOUNT_WITH_SEED_DISCRIMINATOR),\n/* harmony export */   INITIALIZE_NONCE_ACCOUNT_DISCRIMINATOR: () => (/* binding */ INITIALIZE_NONCE_ACCOUNT_DISCRIMINATOR),\n/* harmony export */   NonceState: () => (/* binding */ NonceState),\n/* harmony export */   NonceVersion: () => (/* binding */ NonceVersion),\n/* harmony export */   SYSTEM_ERROR__ACCOUNT_ALREADY_IN_USE: () => (/* binding */ SYSTEM_ERROR__ACCOUNT_ALREADY_IN_USE),\n/* harmony export */   SYSTEM_ERROR__ADDRESS_WITH_SEED_MISMATCH: () => (/* binding */ SYSTEM_ERROR__ADDRESS_WITH_SEED_MISMATCH),\n/* harmony export */   SYSTEM_ERROR__INVALID_ACCOUNT_DATA_LENGTH: () => (/* binding */ SYSTEM_ERROR__INVALID_ACCOUNT_DATA_LENGTH),\n/* harmony export */   SYSTEM_ERROR__INVALID_PROGRAM_ID: () => (/* binding */ SYSTEM_ERROR__INVALID_PROGRAM_ID),\n/* harmony export */   SYSTEM_ERROR__MAX_SEED_LENGTH_EXCEEDED: () => (/* binding */ SYSTEM_ERROR__MAX_SEED_LENGTH_EXCEEDED),\n/* harmony export */   SYSTEM_ERROR__NONCE_BLOCKHASH_NOT_EXPIRED: () => (/* binding */ SYSTEM_ERROR__NONCE_BLOCKHASH_NOT_EXPIRED),\n/* harmony export */   SYSTEM_ERROR__NONCE_NO_RECENT_BLOCKHASHES: () => (/* binding */ SYSTEM_ERROR__NONCE_NO_RECENT_BLOCKHASHES),\n/* harmony export */   SYSTEM_ERROR__NONCE_UNEXPECTED_BLOCKHASH_VALUE: () => (/* binding */ SYSTEM_ERROR__NONCE_UNEXPECTED_BLOCKHASH_VALUE),\n/* harmony export */   SYSTEM_ERROR__RESULT_WITH_NEGATIVE_LAMPORTS: () => (/* binding */ SYSTEM_ERROR__RESULT_WITH_NEGATIVE_LAMPORTS),\n/* harmony export */   SYSTEM_PROGRAM_ADDRESS: () => (/* binding */ SYSTEM_PROGRAM_ADDRESS),\n/* harmony export */   SystemAccount: () => (/* binding */ SystemAccount),\n/* harmony export */   SystemInstruction: () => (/* binding */ SystemInstruction),\n/* harmony export */   TRANSFER_SOL_DISCRIMINATOR: () => (/* binding */ TRANSFER_SOL_DISCRIMINATOR),\n/* harmony export */   TRANSFER_SOL_WITH_SEED_DISCRIMINATOR: () => (/* binding */ TRANSFER_SOL_WITH_SEED_DISCRIMINATOR),\n/* harmony export */   UPGRADE_NONCE_ACCOUNT_DISCRIMINATOR: () => (/* binding */ UPGRADE_NONCE_ACCOUNT_DISCRIMINATOR),\n/* harmony export */   WITHDRAW_NONCE_ACCOUNT_DISCRIMINATOR: () => (/* binding */ WITHDRAW_NONCE_ACCOUNT_DISCRIMINATOR),\n/* harmony export */   decodeNonce: () => (/* binding */ decodeNonce),\n/* harmony export */   fetchAllMaybeNonce: () => (/* binding */ fetchAllMaybeNonce),\n/* harmony export */   fetchAllNonce: () => (/* binding */ fetchAllNonce),\n/* harmony export */   fetchMaybeNonce: () => (/* binding */ fetchMaybeNonce),\n/* harmony export */   fetchNonce: () => (/* binding */ fetchNonce),\n/* harmony export */   getAdvanceNonceAccountDiscriminatorBytes: () => (/* binding */ getAdvanceNonceAccountDiscriminatorBytes),\n/* harmony export */   getAdvanceNonceAccountInstruction: () => (/* binding */ getAdvanceNonceAccountInstruction),\n/* harmony export */   getAdvanceNonceAccountInstructionDataCodec: () => (/* binding */ getAdvanceNonceAccountInstructionDataCodec),\n/* harmony export */   getAdvanceNonceAccountInstructionDataDecoder: () => (/* binding */ getAdvanceNonceAccountInstructionDataDecoder),\n/* harmony export */   getAdvanceNonceAccountInstructionDataEncoder: () => (/* binding */ getAdvanceNonceAccountInstructionDataEncoder),\n/* harmony export */   getAllocateDiscriminatorBytes: () => (/* binding */ getAllocateDiscriminatorBytes),\n/* harmony export */   getAllocateInstruction: () => (/* binding */ getAllocateInstruction),\n/* harmony export */   getAllocateInstructionDataCodec: () => (/* binding */ getAllocateInstructionDataCodec),\n/* harmony export */   getAllocateInstructionDataDecoder: () => (/* binding */ getAllocateInstructionDataDecoder),\n/* harmony export */   getAllocateInstructionDataEncoder: () => (/* binding */ getAllocateInstructionDataEncoder),\n/* harmony export */   getAllocateWithSeedDiscriminatorBytes: () => (/* binding */ getAllocateWithSeedDiscriminatorBytes),\n/* harmony export */   getAllocateWithSeedInstruction: () => (/* binding */ getAllocateWithSeedInstruction),\n/* harmony export */   getAllocateWithSeedInstructionDataCodec: () => (/* binding */ getAllocateWithSeedInstructionDataCodec),\n/* harmony export */   getAllocateWithSeedInstructionDataDecoder: () => (/* binding */ getAllocateWithSeedInstructionDataDecoder),\n/* harmony export */   getAllocateWithSeedInstructionDataEncoder: () => (/* binding */ getAllocateWithSeedInstructionDataEncoder),\n/* harmony export */   getAssignDiscriminatorBytes: () => (/* binding */ getAssignDiscriminatorBytes),\n/* harmony export */   getAssignInstruction: () => (/* binding */ getAssignInstruction),\n/* harmony export */   getAssignInstructionDataCodec: () => (/* binding */ getAssignInstructionDataCodec),\n/* harmony export */   getAssignInstructionDataDecoder: () => (/* binding */ getAssignInstructionDataDecoder),\n/* harmony export */   getAssignInstructionDataEncoder: () => (/* binding */ getAssignInstructionDataEncoder),\n/* harmony export */   getAssignWithSeedDiscriminatorBytes: () => (/* binding */ getAssignWithSeedDiscriminatorBytes),\n/* harmony export */   getAssignWithSeedInstruction: () => (/* binding */ getAssignWithSeedInstruction),\n/* harmony export */   getAssignWithSeedInstructionDataCodec: () => (/* binding */ getAssignWithSeedInstructionDataCodec),\n/* harmony export */   getAssignWithSeedInstructionDataDecoder: () => (/* binding */ getAssignWithSeedInstructionDataDecoder),\n/* harmony export */   getAssignWithSeedInstructionDataEncoder: () => (/* binding */ getAssignWithSeedInstructionDataEncoder),\n/* harmony export */   getAuthorizeNonceAccountDiscriminatorBytes: () => (/* binding */ getAuthorizeNonceAccountDiscriminatorBytes),\n/* harmony export */   getAuthorizeNonceAccountInstruction: () => (/* binding */ getAuthorizeNonceAccountInstruction),\n/* harmony export */   getAuthorizeNonceAccountInstructionDataCodec: () => (/* binding */ getAuthorizeNonceAccountInstructionDataCodec),\n/* harmony export */   getAuthorizeNonceAccountInstructionDataDecoder: () => (/* binding */ getAuthorizeNonceAccountInstructionDataDecoder),\n/* harmony export */   getAuthorizeNonceAccountInstructionDataEncoder: () => (/* binding */ getAuthorizeNonceAccountInstructionDataEncoder),\n/* harmony export */   getCreateAccountDiscriminatorBytes: () => (/* binding */ getCreateAccountDiscriminatorBytes),\n/* harmony export */   getCreateAccountInstruction: () => (/* binding */ getCreateAccountInstruction),\n/* harmony export */   getCreateAccountInstructionDataCodec: () => (/* binding */ getCreateAccountInstructionDataCodec),\n/* harmony export */   getCreateAccountInstructionDataDecoder: () => (/* binding */ getCreateAccountInstructionDataDecoder),\n/* harmony export */   getCreateAccountInstructionDataEncoder: () => (/* binding */ getCreateAccountInstructionDataEncoder),\n/* harmony export */   getCreateAccountWithSeedDiscriminatorBytes: () => (/* binding */ getCreateAccountWithSeedDiscriminatorBytes),\n/* harmony export */   getCreateAccountWithSeedInstruction: () => (/* binding */ getCreateAccountWithSeedInstruction),\n/* harmony export */   getCreateAccountWithSeedInstructionDataCodec: () => (/* binding */ getCreateAccountWithSeedInstructionDataCodec),\n/* harmony export */   getCreateAccountWithSeedInstructionDataDecoder: () => (/* binding */ getCreateAccountWithSeedInstructionDataDecoder),\n/* harmony export */   getCreateAccountWithSeedInstructionDataEncoder: () => (/* binding */ getCreateAccountWithSeedInstructionDataEncoder),\n/* harmony export */   getInitializeNonceAccountDiscriminatorBytes: () => (/* binding */ getInitializeNonceAccountDiscriminatorBytes),\n/* harmony export */   getInitializeNonceAccountInstruction: () => (/* binding */ getInitializeNonceAccountInstruction),\n/* harmony export */   getInitializeNonceAccountInstructionDataCodec: () => (/* binding */ getInitializeNonceAccountInstructionDataCodec),\n/* harmony export */   getInitializeNonceAccountInstructionDataDecoder: () => (/* binding */ getInitializeNonceAccountInstructionDataDecoder),\n/* harmony export */   getInitializeNonceAccountInstructionDataEncoder: () => (/* binding */ getInitializeNonceAccountInstructionDataEncoder),\n/* harmony export */   getNonceCodec: () => (/* binding */ getNonceCodec),\n/* harmony export */   getNonceDecoder: () => (/* binding */ getNonceDecoder),\n/* harmony export */   getNonceEncoder: () => (/* binding */ getNonceEncoder),\n/* harmony export */   getNonceSize: () => (/* binding */ getNonceSize),\n/* harmony export */   getNonceStateCodec: () => (/* binding */ getNonceStateCodec),\n/* harmony export */   getNonceStateDecoder: () => (/* binding */ getNonceStateDecoder),\n/* harmony export */   getNonceStateEncoder: () => (/* binding */ getNonceStateEncoder),\n/* harmony export */   getNonceVersionCodec: () => (/* binding */ getNonceVersionCodec),\n/* harmony export */   getNonceVersionDecoder: () => (/* binding */ getNonceVersionDecoder),\n/* harmony export */   getNonceVersionEncoder: () => (/* binding */ getNonceVersionEncoder),\n/* harmony export */   getSystemErrorMessage: () => (/* binding */ getSystemErrorMessage),\n/* harmony export */   getTransferSolDiscriminatorBytes: () => (/* binding */ getTransferSolDiscriminatorBytes),\n/* harmony export */   getTransferSolInstruction: () => (/* binding */ getTransferSolInstruction),\n/* harmony export */   getTransferSolInstructionDataCodec: () => (/* binding */ getTransferSolInstructionDataCodec),\n/* harmony export */   getTransferSolInstructionDataDecoder: () => (/* binding */ getTransferSolInstructionDataDecoder),\n/* harmony export */   getTransferSolInstructionDataEncoder: () => (/* binding */ getTransferSolInstructionDataEncoder),\n/* harmony export */   getTransferSolWithSeedDiscriminatorBytes: () => (/* binding */ getTransferSolWithSeedDiscriminatorBytes),\n/* harmony export */   getTransferSolWithSeedInstruction: () => (/* binding */ getTransferSolWithSeedInstruction),\n/* harmony export */   getTransferSolWithSeedInstructionDataCodec: () => (/* binding */ getTransferSolWithSeedInstructionDataCodec),\n/* harmony export */   getTransferSolWithSeedInstructionDataDecoder: () => (/* binding */ getTransferSolWithSeedInstructionDataDecoder),\n/* harmony export */   getTransferSolWithSeedInstructionDataEncoder: () => (/* binding */ getTransferSolWithSeedInstructionDataEncoder),\n/* harmony export */   getUpgradeNonceAccountDiscriminatorBytes: () => (/* binding */ getUpgradeNonceAccountDiscriminatorBytes),\n/* harmony export */   getUpgradeNonceAccountInstruction: () => (/* binding */ getUpgradeNonceAccountInstruction),\n/* harmony export */   getUpgradeNonceAccountInstructionDataCodec: () => (/* binding */ getUpgradeNonceAccountInstructionDataCodec),\n/* harmony export */   getUpgradeNonceAccountInstructionDataDecoder: () => (/* binding */ getUpgradeNonceAccountInstructionDataDecoder),\n/* harmony export */   getUpgradeNonceAccountInstructionDataEncoder: () => (/* binding */ getUpgradeNonceAccountInstructionDataEncoder),\n/* harmony export */   getWithdrawNonceAccountDiscriminatorBytes: () => (/* binding */ getWithdrawNonceAccountDiscriminatorBytes),\n/* harmony export */   getWithdrawNonceAccountInstruction: () => (/* binding */ getWithdrawNonceAccountInstruction),\n/* harmony export */   getWithdrawNonceAccountInstructionDataCodec: () => (/* binding */ getWithdrawNonceAccountInstructionDataCodec),\n/* harmony export */   getWithdrawNonceAccountInstructionDataDecoder: () => (/* binding */ getWithdrawNonceAccountInstructionDataDecoder),\n/* harmony export */   getWithdrawNonceAccountInstructionDataEncoder: () => (/* binding */ getWithdrawNonceAccountInstructionDataEncoder),\n/* harmony export */   identifySystemInstruction: () => (/* binding */ identifySystemInstruction),\n/* harmony export */   isSystemError: () => (/* binding */ isSystemError),\n/* harmony export */   parseAdvanceNonceAccountInstruction: () => (/* binding */ parseAdvanceNonceAccountInstruction),\n/* harmony export */   parseAllocateInstruction: () => (/* binding */ parseAllocateInstruction),\n/* harmony export */   parseAllocateWithSeedInstruction: () => (/* binding */ parseAllocateWithSeedInstruction),\n/* harmony export */   parseAssignInstruction: () => (/* binding */ parseAssignInstruction),\n/* harmony export */   parseAssignWithSeedInstruction: () => (/* binding */ parseAssignWithSeedInstruction),\n/* harmony export */   parseAuthorizeNonceAccountInstruction: () => (/* binding */ parseAuthorizeNonceAccountInstruction),\n/* harmony export */   parseCreateAccountInstruction: () => (/* binding */ parseCreateAccountInstruction),\n/* harmony export */   parseCreateAccountWithSeedInstruction: () => (/* binding */ parseCreateAccountWithSeedInstruction),\n/* harmony export */   parseInitializeNonceAccountInstruction: () => (/* binding */ parseInitializeNonceAccountInstruction),\n/* harmony export */   parseTransferSolInstruction: () => (/* binding */ parseTransferSolInstruction),\n/* harmony export */   parseTransferSolWithSeedInstruction: () => (/* binding */ parseTransferSolWithSeedInstruction),\n/* harmony export */   parseUpgradeNonceAccountInstruction: () => (/* binding */ parseUpgradeNonceAccountInstruction),\n/* harmony export */   parseWithdrawNonceAccountInstruction: () => (/* binding */ parseWithdrawNonceAccountInstruction)\n/* harmony export */ });\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/codecs-data-structures/dist/index.node.mjs\");\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/codecs-numbers/dist/index.node.mjs\");\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/codecs-core/dist/index.node.mjs\");\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/addresses/dist/index.node.mjs\");\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/accounts/dist/index.node.mjs\");\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/programs/dist/index.node.mjs\");\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/instructions/dist/index.node.mjs\");\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/signers/dist/index.node.mjs\");\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/codecs-strings/dist/index.node.mjs\");\n\n\n// src/generated/accounts/nonce.ts\nvar NonceState = /* @__PURE__ */ ((NonceState2) => {\n  NonceState2[NonceState2[\"Uninitialized\"] = 0] = \"Uninitialized\";\n  NonceState2[NonceState2[\"Initialized\"] = 1] = \"Initialized\";\n  return NonceState2;\n})(NonceState || {});\nfunction getNonceStateEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getEnumEncoder)(NonceState, { size: (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)() });\n}\nfunction getNonceStateDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getEnumDecoder)(NonceState, { size: (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Decoder)() });\n}\nfunction getNonceStateCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.combineCodec)(getNonceStateEncoder(), getNonceStateDecoder());\n}\nvar NonceVersion = /* @__PURE__ */ ((NonceVersion2) => {\n  NonceVersion2[NonceVersion2[\"Legacy\"] = 0] = \"Legacy\";\n  NonceVersion2[NonceVersion2[\"Current\"] = 1] = \"Current\";\n  return NonceVersion2;\n})(NonceVersion || {});\nfunction getNonceVersionEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getEnumEncoder)(NonceVersion, { size: (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)() });\n}\nfunction getNonceVersionDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getEnumDecoder)(NonceVersion, { size: (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Decoder)() });\n}\nfunction getNonceVersionCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.combineCodec)(getNonceVersionEncoder(), getNonceVersionDecoder());\n}\n\n// src/generated/accounts/nonce.ts\nfunction getNonceEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n    [\"version\", getNonceVersionEncoder()],\n    [\"state\", getNonceStateEncoder()],\n    [\"authority\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressEncoder)()],\n    [\"blockhash\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressEncoder)()],\n    [\"lamportsPerSignature\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Encoder)()]\n  ]);\n}\nfunction getNonceDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"version\", getNonceVersionDecoder()],\n    [\"state\", getNonceStateDecoder()],\n    [\"authority\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressDecoder)()],\n    [\"blockhash\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressDecoder)()],\n    [\"lamportsPerSignature\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Decoder)()]\n  ]);\n}\nfunction getNonceCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.combineCodec)(getNonceEncoder(), getNonceDecoder());\n}\nfunction decodeNonce(encodedAccount) {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.decodeAccount)(\n    encodedAccount,\n    getNonceDecoder()\n  );\n}\nasync function fetchNonce(rpc, address, config) {\n  const maybeAccount = await fetchMaybeNonce(rpc, address, config);\n  (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.assertAccountExists)(maybeAccount);\n  return maybeAccount;\n}\nasync function fetchMaybeNonce(rpc, address, config) {\n  const maybeAccount = await (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.fetchEncodedAccount)(rpc, address, config);\n  return decodeNonce(maybeAccount);\n}\nasync function fetchAllNonce(rpc, addresses, config) {\n  const maybeAccounts = await fetchAllMaybeNonce(rpc, addresses, config);\n  (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.assertAccountsExist)(maybeAccounts);\n  return maybeAccounts;\n}\nasync function fetchAllMaybeNonce(rpc, addresses, config) {\n  const maybeAccounts = await (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.fetchEncodedAccounts)(rpc, addresses, config);\n  return maybeAccounts.map((maybeAccount) => decodeNonce(maybeAccount));\n}\nfunction getNonceSize() {\n  return 80;\n}\nvar SYSTEM_PROGRAM_ADDRESS = \"11111111111111111111111111111111\";\nvar SystemAccount = /* @__PURE__ */ ((SystemAccount2) => {\n  SystemAccount2[SystemAccount2[\"Nonce\"] = 0] = \"Nonce\";\n  return SystemAccount2;\n})(SystemAccount || {});\nvar SystemInstruction = /* @__PURE__ */ ((SystemInstruction2) => {\n  SystemInstruction2[SystemInstruction2[\"CreateAccount\"] = 0] = \"CreateAccount\";\n  SystemInstruction2[SystemInstruction2[\"Assign\"] = 1] = \"Assign\";\n  SystemInstruction2[SystemInstruction2[\"TransferSol\"] = 2] = \"TransferSol\";\n  SystemInstruction2[SystemInstruction2[\"CreateAccountWithSeed\"] = 3] = \"CreateAccountWithSeed\";\n  SystemInstruction2[SystemInstruction2[\"AdvanceNonceAccount\"] = 4] = \"AdvanceNonceAccount\";\n  SystemInstruction2[SystemInstruction2[\"WithdrawNonceAccount\"] = 5] = \"WithdrawNonceAccount\";\n  SystemInstruction2[SystemInstruction2[\"InitializeNonceAccount\"] = 6] = \"InitializeNonceAccount\";\n  SystemInstruction2[SystemInstruction2[\"AuthorizeNonceAccount\"] = 7] = \"AuthorizeNonceAccount\";\n  SystemInstruction2[SystemInstruction2[\"Allocate\"] = 8] = \"Allocate\";\n  SystemInstruction2[SystemInstruction2[\"AllocateWithSeed\"] = 9] = \"AllocateWithSeed\";\n  SystemInstruction2[SystemInstruction2[\"AssignWithSeed\"] = 10] = \"AssignWithSeed\";\n  SystemInstruction2[SystemInstruction2[\"TransferSolWithSeed\"] = 11] = \"TransferSolWithSeed\";\n  SystemInstruction2[SystemInstruction2[\"UpgradeNonceAccount\"] = 12] = \"UpgradeNonceAccount\";\n  return SystemInstruction2;\n})(SystemInstruction || {});\nfunction identifySystemInstruction(instruction) {\n  const data = \"data\" in instruction ? instruction.data : instruction;\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(0), 0)) {\n    return 0 /* CreateAccount */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(1), 0)) {\n    return 1 /* Assign */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(2), 0)) {\n    return 2 /* TransferSol */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(3), 0)) {\n    return 3 /* CreateAccountWithSeed */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(4), 0)) {\n    return 4 /* AdvanceNonceAccount */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(5), 0)) {\n    return 5 /* WithdrawNonceAccount */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(6), 0)) {\n    return 6 /* InitializeNonceAccount */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(7), 0)) {\n    return 7 /* AuthorizeNonceAccount */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(8), 0)) {\n    return 8 /* Allocate */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(9), 0)) {\n    return 9 /* AllocateWithSeed */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(10), 0)) {\n    return 10 /* AssignWithSeed */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(11), 0)) {\n    return 11 /* TransferSolWithSeed */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(12), 0)) {\n    return 12 /* UpgradeNonceAccount */;\n  }\n  throw new Error(\n    \"The provided instruction could not be identified as a system instruction.\"\n  );\n}\n\n// src/generated/errors/system.ts\nvar SYSTEM_ERROR__ACCOUNT_ALREADY_IN_USE = 0;\nvar SYSTEM_ERROR__RESULT_WITH_NEGATIVE_LAMPORTS = 1;\nvar SYSTEM_ERROR__INVALID_PROGRAM_ID = 2;\nvar SYSTEM_ERROR__INVALID_ACCOUNT_DATA_LENGTH = 3;\nvar SYSTEM_ERROR__MAX_SEED_LENGTH_EXCEEDED = 4;\nvar SYSTEM_ERROR__ADDRESS_WITH_SEED_MISMATCH = 5;\nvar SYSTEM_ERROR__NONCE_NO_RECENT_BLOCKHASHES = 6;\nvar SYSTEM_ERROR__NONCE_BLOCKHASH_NOT_EXPIRED = 7;\nvar SYSTEM_ERROR__NONCE_UNEXPECTED_BLOCKHASH_VALUE = 8;\nvar systemErrorMessages;\nif (true) {\n  systemErrorMessages = {\n    [SYSTEM_ERROR__ACCOUNT_ALREADY_IN_USE]: `an account with the same address already exists`,\n    [SYSTEM_ERROR__ADDRESS_WITH_SEED_MISMATCH]: `provided address does not match addressed derived from seed`,\n    [SYSTEM_ERROR__INVALID_ACCOUNT_DATA_LENGTH]: `cannot allocate account data of this length`,\n    [SYSTEM_ERROR__INVALID_PROGRAM_ID]: `cannot assign account to this program id`,\n    [SYSTEM_ERROR__MAX_SEED_LENGTH_EXCEEDED]: `length of requested seed is too long`,\n    [SYSTEM_ERROR__NONCE_BLOCKHASH_NOT_EXPIRED]: `stored nonce is still in recent_blockhashes`,\n    [SYSTEM_ERROR__NONCE_NO_RECENT_BLOCKHASHES]: `advancing stored nonce requires a populated RecentBlockhashes sysvar`,\n    [SYSTEM_ERROR__NONCE_UNEXPECTED_BLOCKHASH_VALUE]: `specified nonce does not match stored nonce`,\n    [SYSTEM_ERROR__RESULT_WITH_NEGATIVE_LAMPORTS]: `account does not have enough SOL to perform the operation`\n  };\n}\nfunction getSystemErrorMessage(code) {\n  if (true) {\n    return systemErrorMessages[code];\n  }\n  return \"Error message not available in production bundles.\";\n}\nfunction isSystemError(error, transactionMessage, code) {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_5__.isProgramError)(\n    error,\n    transactionMessage,\n    SYSTEM_PROGRAM_ADDRESS,\n    code\n  );\n}\nfunction expectAddress(value) {\n  if (!value) {\n    throw new Error(\"Expected a Address.\");\n  }\n  if (typeof value === \"object\" && \"address\" in value) {\n    return value.address;\n  }\n  if (Array.isArray(value)) {\n    return value[0];\n  }\n  return value;\n}\nfunction getAccountMetaFactory(programAddress, optionalAccountStrategy) {\n  return (account) => {\n    if (!account.value) {\n      return;\n    }\n    const writableRole = account.isWritable ? _solana_kit__WEBPACK_IMPORTED_MODULE_6__.AccountRole.WRITABLE : _solana_kit__WEBPACK_IMPORTED_MODULE_6__.AccountRole.READONLY;\n    return Object.freeze({\n      address: expectAddress(account.value),\n      role: isTransactionSigner(account.value) ? (0,_solana_kit__WEBPACK_IMPORTED_MODULE_6__.upgradeRoleToSigner)(writableRole) : writableRole,\n      ...isTransactionSigner(account.value) ? { signer: account.value } : {}\n    });\n  };\n}\nfunction isTransactionSigner(value) {\n  return !!value && typeof value === \"object\" && \"address\" in value && (0,_solana_kit__WEBPACK_IMPORTED_MODULE_7__.isTransactionSigner)(value);\n}\n\n// src/generated/instructions/advanceNonceAccount.ts\nvar ADVANCE_NONCE_ACCOUNT_DISCRIMINATOR = 4;\nfunction getAdvanceNonceAccountDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(ADVANCE_NONCE_ACCOUNT_DISCRIMINATOR);\n}\nfunction getAdvanceNonceAccountInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)()]]),\n    (value) => ({\n      ...value,\n      discriminator: ADVANCE_NONCE_ACCOUNT_DISCRIMINATOR\n    })\n  );\n}\nfunction getAdvanceNonceAccountInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Decoder)()]]);\n}\nfunction getAdvanceNonceAccountInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.combineCodec)(\n    getAdvanceNonceAccountInstructionDataEncoder(),\n    getAdvanceNonceAccountInstructionDataDecoder()\n  );\n}\nfunction getAdvanceNonceAccountInstruction(input, config) {\n  const programAddress = config?.programAddress ?? SYSTEM_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    nonceAccount: { value: input.nonceAccount ?? null, isWritable: true },\n    recentBlockhashesSysvar: {\n      value: input.recentBlockhashesSysvar ?? null,\n      isWritable: false\n    },\n    nonceAuthority: { value: input.nonceAuthority ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  if (!accounts.recentBlockhashesSysvar.value) {\n    accounts.recentBlockhashesSysvar.value = \"SysvarRecentB1ockHashes11111111111111111111\";\n  }\n  const getAccountMeta = getAccountMetaFactory();\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.nonceAccount),\n      getAccountMeta(accounts.recentBlockhashesSysvar),\n      getAccountMeta(accounts.nonceAuthority)\n    ],\n    programAddress,\n    data: getAdvanceNonceAccountInstructionDataEncoder().encode({})\n  };\n  return instruction;\n}\nfunction parseAdvanceNonceAccountInstruction(instruction) {\n  if (instruction.accounts.length < 3) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      nonceAccount: getNextAccount(),\n      recentBlockhashesSysvar: getNextAccount(),\n      nonceAuthority: getNextAccount()\n    },\n    data: getAdvanceNonceAccountInstructionDataDecoder().decode(\n      instruction.data\n    )\n  };\n}\nvar ALLOCATE_DISCRIMINATOR = 8;\nfunction getAllocateDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(ALLOCATE_DISCRIMINATOR);\n}\nfunction getAllocateInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)()],\n      [\"space\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Encoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: ALLOCATE_DISCRIMINATOR })\n  );\n}\nfunction getAllocateInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Decoder)()],\n    [\"space\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Decoder)()]\n  ]);\n}\nfunction getAllocateInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.combineCodec)(\n    getAllocateInstructionDataEncoder(),\n    getAllocateInstructionDataDecoder()\n  );\n}\nfunction getAllocateInstruction(input, config) {\n  const programAddress = config?.programAddress ?? SYSTEM_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    newAccount: { value: input.newAccount ?? null, isWritable: true }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const getAccountMeta = getAccountMetaFactory();\n  const instruction = {\n    accounts: [getAccountMeta(accounts.newAccount)],\n    programAddress,\n    data: getAllocateInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseAllocateInstruction(instruction) {\n  if (instruction.accounts.length < 1) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      newAccount: getNextAccount()\n    },\n    data: getAllocateInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar ALLOCATE_WITH_SEED_DISCRIMINATOR = 9;\nfunction getAllocateWithSeedDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(ALLOCATE_WITH_SEED_DISCRIMINATOR);\n}\nfunction getAllocateWithSeedInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)()],\n      [\"base\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressEncoder)()],\n      [\"seed\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.addEncoderSizePrefix)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_8__.getUtf8Encoder)(), (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Encoder)())],\n      [\"space\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Encoder)()],\n      [\"programAddress\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressEncoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: ALLOCATE_WITH_SEED_DISCRIMINATOR })\n  );\n}\nfunction getAllocateWithSeedInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Decoder)()],\n    [\"base\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressDecoder)()],\n    [\"seed\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.addDecoderSizePrefix)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_8__.getUtf8Decoder)(), (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Decoder)())],\n    [\"space\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Decoder)()],\n    [\"programAddress\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressDecoder)()]\n  ]);\n}\nfunction getAllocateWithSeedInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.combineCodec)(\n    getAllocateWithSeedInstructionDataEncoder(),\n    getAllocateWithSeedInstructionDataDecoder()\n  );\n}\nfunction getAllocateWithSeedInstruction(input, config) {\n  const programAddress = config?.programAddress ?? SYSTEM_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    newAccount: { value: input.newAccount ?? null, isWritable: true },\n    baseAccount: { value: input.baseAccount ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const getAccountMeta = getAccountMetaFactory();\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.newAccount),\n      getAccountMeta(accounts.baseAccount)\n    ],\n    programAddress,\n    data: getAllocateWithSeedInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseAllocateWithSeedInstruction(instruction) {\n  if (instruction.accounts.length < 2) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      newAccount: getNextAccount(),\n      baseAccount: getNextAccount()\n    },\n    data: getAllocateWithSeedInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar ASSIGN_DISCRIMINATOR = 1;\nfunction getAssignDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(ASSIGN_DISCRIMINATOR);\n}\nfunction getAssignInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)()],\n      [\"programAddress\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressEncoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: ASSIGN_DISCRIMINATOR })\n  );\n}\nfunction getAssignInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Decoder)()],\n    [\"programAddress\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressDecoder)()]\n  ]);\n}\nfunction getAssignInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.combineCodec)(\n    getAssignInstructionDataEncoder(),\n    getAssignInstructionDataDecoder()\n  );\n}\nfunction getAssignInstruction(input, config) {\n  const programAddress = config?.programAddress ?? SYSTEM_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    account: { value: input.account ?? null, isWritable: true }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const getAccountMeta = getAccountMetaFactory();\n  const instruction = {\n    accounts: [getAccountMeta(accounts.account)],\n    programAddress,\n    data: getAssignInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseAssignInstruction(instruction) {\n  if (instruction.accounts.length < 1) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      account: getNextAccount()\n    },\n    data: getAssignInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar ASSIGN_WITH_SEED_DISCRIMINATOR = 10;\nfunction getAssignWithSeedDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(ASSIGN_WITH_SEED_DISCRIMINATOR);\n}\nfunction getAssignWithSeedInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)()],\n      [\"base\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressEncoder)()],\n      [\"seed\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.addEncoderSizePrefix)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_8__.getUtf8Encoder)(), (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Encoder)())],\n      [\"programAddress\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressEncoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: ASSIGN_WITH_SEED_DISCRIMINATOR })\n  );\n}\nfunction getAssignWithSeedInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Decoder)()],\n    [\"base\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressDecoder)()],\n    [\"seed\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.addDecoderSizePrefix)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_8__.getUtf8Decoder)(), (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Decoder)())],\n    [\"programAddress\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressDecoder)()]\n  ]);\n}\nfunction getAssignWithSeedInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.combineCodec)(\n    getAssignWithSeedInstructionDataEncoder(),\n    getAssignWithSeedInstructionDataDecoder()\n  );\n}\nfunction getAssignWithSeedInstruction(input, config) {\n  const programAddress = config?.programAddress ?? SYSTEM_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    account: { value: input.account ?? null, isWritable: true },\n    baseAccount: { value: input.baseAccount ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const getAccountMeta = getAccountMetaFactory();\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.account),\n      getAccountMeta(accounts.baseAccount)\n    ],\n    programAddress,\n    data: getAssignWithSeedInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseAssignWithSeedInstruction(instruction) {\n  if (instruction.accounts.length < 2) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      account: getNextAccount(),\n      baseAccount: getNextAccount()\n    },\n    data: getAssignWithSeedInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar AUTHORIZE_NONCE_ACCOUNT_DISCRIMINATOR = 7;\nfunction getAuthorizeNonceAccountDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(AUTHORIZE_NONCE_ACCOUNT_DISCRIMINATOR);\n}\nfunction getAuthorizeNonceAccountInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)()],\n      [\"newNonceAuthority\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressEncoder)()]\n    ]),\n    (value) => ({\n      ...value,\n      discriminator: AUTHORIZE_NONCE_ACCOUNT_DISCRIMINATOR\n    })\n  );\n}\nfunction getAuthorizeNonceAccountInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Decoder)()],\n    [\"newNonceAuthority\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressDecoder)()]\n  ]);\n}\nfunction getAuthorizeNonceAccountInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.combineCodec)(\n    getAuthorizeNonceAccountInstructionDataEncoder(),\n    getAuthorizeNonceAccountInstructionDataDecoder()\n  );\n}\nfunction getAuthorizeNonceAccountInstruction(input, config) {\n  const programAddress = config?.programAddress ?? SYSTEM_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    nonceAccount: { value: input.nonceAccount ?? null, isWritable: true },\n    nonceAuthority: { value: input.nonceAuthority ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const getAccountMeta = getAccountMetaFactory();\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.nonceAccount),\n      getAccountMeta(accounts.nonceAuthority)\n    ],\n    programAddress,\n    data: getAuthorizeNonceAccountInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseAuthorizeNonceAccountInstruction(instruction) {\n  if (instruction.accounts.length < 2) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      nonceAccount: getNextAccount(),\n      nonceAuthority: getNextAccount()\n    },\n    data: getAuthorizeNonceAccountInstructionDataDecoder().decode(\n      instruction.data\n    )\n  };\n}\nvar CREATE_ACCOUNT_DISCRIMINATOR = 0;\nfunction getCreateAccountDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(CREATE_ACCOUNT_DISCRIMINATOR);\n}\nfunction getCreateAccountInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)()],\n      [\"lamports\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Encoder)()],\n      [\"space\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Encoder)()],\n      [\"programAddress\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressEncoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: CREATE_ACCOUNT_DISCRIMINATOR })\n  );\n}\nfunction getCreateAccountInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Decoder)()],\n    [\"lamports\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Decoder)()],\n    [\"space\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Decoder)()],\n    [\"programAddress\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressDecoder)()]\n  ]);\n}\nfunction getCreateAccountInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.combineCodec)(\n    getCreateAccountInstructionDataEncoder(),\n    getCreateAccountInstructionDataDecoder()\n  );\n}\nfunction getCreateAccountInstruction(input, config) {\n  const programAddress = config?.programAddress ?? SYSTEM_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    payer: { value: input.payer ?? null, isWritable: true },\n    newAccount: { value: input.newAccount ?? null, isWritable: true }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const byteDelta = [Number(args.space) + _solana_kit__WEBPACK_IMPORTED_MODULE_4__.BASE_ACCOUNT_SIZE].reduce(\n    (a, b) => a + b,\n    0\n  );\n  const getAccountMeta = getAccountMetaFactory();\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.payer),\n      getAccountMeta(accounts.newAccount)\n    ],\n    programAddress,\n    data: getCreateAccountInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return Object.freeze({ ...instruction, byteDelta });\n}\nfunction parseCreateAccountInstruction(instruction) {\n  if (instruction.accounts.length < 2) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      payer: getNextAccount(),\n      newAccount: getNextAccount()\n    },\n    data: getCreateAccountInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar CREATE_ACCOUNT_WITH_SEED_DISCRIMINATOR = 3;\nfunction getCreateAccountWithSeedDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(CREATE_ACCOUNT_WITH_SEED_DISCRIMINATOR);\n}\nfunction getCreateAccountWithSeedInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)()],\n      [\"base\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressEncoder)()],\n      [\"seed\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.addEncoderSizePrefix)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_8__.getUtf8Encoder)(), (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Encoder)())],\n      [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Encoder)()],\n      [\"space\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Encoder)()],\n      [\"programAddress\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressEncoder)()]\n    ]),\n    (value) => ({\n      ...value,\n      discriminator: CREATE_ACCOUNT_WITH_SEED_DISCRIMINATOR\n    })\n  );\n}\nfunction getCreateAccountWithSeedInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Decoder)()],\n    [\"base\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressDecoder)()],\n    [\"seed\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.addDecoderSizePrefix)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_8__.getUtf8Decoder)(), (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Decoder)())],\n    [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Decoder)()],\n    [\"space\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Decoder)()],\n    [\"programAddress\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressDecoder)()]\n  ]);\n}\nfunction getCreateAccountWithSeedInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.combineCodec)(\n    getCreateAccountWithSeedInstructionDataEncoder(),\n    getCreateAccountWithSeedInstructionDataDecoder()\n  );\n}\nfunction getCreateAccountWithSeedInstruction(input, config) {\n  const programAddress = config?.programAddress ?? SYSTEM_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    payer: { value: input.payer ?? null, isWritable: true },\n    newAccount: { value: input.newAccount ?? null, isWritable: true },\n    baseAccount: { value: input.baseAccount ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const getAccountMeta = getAccountMetaFactory();\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.payer),\n      getAccountMeta(accounts.newAccount),\n      getAccountMeta(accounts.baseAccount)\n    ].filter((x) => x !== void 0),\n    programAddress,\n    data: getCreateAccountWithSeedInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseCreateAccountWithSeedInstruction(instruction) {\n  if (instruction.accounts.length < 2) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  let optionalAccountsRemaining = instruction.accounts.length - 2;\n  const getNextOptionalAccount = () => {\n    if (optionalAccountsRemaining === 0) return void 0;\n    optionalAccountsRemaining -= 1;\n    return getNextAccount();\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      payer: getNextAccount(),\n      newAccount: getNextAccount(),\n      baseAccount: getNextOptionalAccount()\n    },\n    data: getCreateAccountWithSeedInstructionDataDecoder().decode(\n      instruction.data\n    )\n  };\n}\nvar INITIALIZE_NONCE_ACCOUNT_DISCRIMINATOR = 6;\nfunction getInitializeNonceAccountDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(INITIALIZE_NONCE_ACCOUNT_DISCRIMINATOR);\n}\nfunction getInitializeNonceAccountInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)()],\n      [\"nonceAuthority\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressEncoder)()]\n    ]),\n    (value) => ({\n      ...value,\n      discriminator: INITIALIZE_NONCE_ACCOUNT_DISCRIMINATOR\n    })\n  );\n}\nfunction getInitializeNonceAccountInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Decoder)()],\n    [\"nonceAuthority\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressDecoder)()]\n  ]);\n}\nfunction getInitializeNonceAccountInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.combineCodec)(\n    getInitializeNonceAccountInstructionDataEncoder(),\n    getInitializeNonceAccountInstructionDataDecoder()\n  );\n}\nfunction getInitializeNonceAccountInstruction(input, config) {\n  const programAddress = config?.programAddress ?? SYSTEM_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    nonceAccount: { value: input.nonceAccount ?? null, isWritable: true },\n    recentBlockhashesSysvar: {\n      value: input.recentBlockhashesSysvar ?? null,\n      isWritable: false\n    },\n    rentSysvar: { value: input.rentSysvar ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  if (!accounts.recentBlockhashesSysvar.value) {\n    accounts.recentBlockhashesSysvar.value = \"SysvarRecentB1ockHashes11111111111111111111\";\n  }\n  if (!accounts.rentSysvar.value) {\n    accounts.rentSysvar.value = \"SysvarRent111111111111111111111111111111111\";\n  }\n  const getAccountMeta = getAccountMetaFactory();\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.nonceAccount),\n      getAccountMeta(accounts.recentBlockhashesSysvar),\n      getAccountMeta(accounts.rentSysvar)\n    ],\n    programAddress,\n    data: getInitializeNonceAccountInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseInitializeNonceAccountInstruction(instruction) {\n  if (instruction.accounts.length < 3) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      nonceAccount: getNextAccount(),\n      recentBlockhashesSysvar: getNextAccount(),\n      rentSysvar: getNextAccount()\n    },\n    data: getInitializeNonceAccountInstructionDataDecoder().decode(\n      instruction.data\n    )\n  };\n}\nvar TRANSFER_SOL_DISCRIMINATOR = 2;\nfunction getTransferSolDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(TRANSFER_SOL_DISCRIMINATOR);\n}\nfunction getTransferSolInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)()],\n      [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Encoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: TRANSFER_SOL_DISCRIMINATOR })\n  );\n}\nfunction getTransferSolInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Decoder)()],\n    [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Decoder)()]\n  ]);\n}\nfunction getTransferSolInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.combineCodec)(\n    getTransferSolInstructionDataEncoder(),\n    getTransferSolInstructionDataDecoder()\n  );\n}\nfunction getTransferSolInstruction(input, config) {\n  const programAddress = config?.programAddress ?? SYSTEM_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    source: { value: input.source ?? null, isWritable: true },\n    destination: { value: input.destination ?? null, isWritable: true }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const getAccountMeta = getAccountMetaFactory();\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.source),\n      getAccountMeta(accounts.destination)\n    ],\n    programAddress,\n    data: getTransferSolInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseTransferSolInstruction(instruction) {\n  if (instruction.accounts.length < 2) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      source: getNextAccount(),\n      destination: getNextAccount()\n    },\n    data: getTransferSolInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar TRANSFER_SOL_WITH_SEED_DISCRIMINATOR = 11;\nfunction getTransferSolWithSeedDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(TRANSFER_SOL_WITH_SEED_DISCRIMINATOR);\n}\nfunction getTransferSolWithSeedInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)()],\n      [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Encoder)()],\n      [\"fromSeed\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.addEncoderSizePrefix)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_8__.getUtf8Encoder)(), (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Encoder)())],\n      [\"fromOwner\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressEncoder)()]\n    ]),\n    (value) => ({\n      ...value,\n      discriminator: TRANSFER_SOL_WITH_SEED_DISCRIMINATOR\n    })\n  );\n}\nfunction getTransferSolWithSeedInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Decoder)()],\n    [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Decoder)()],\n    [\"fromSeed\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.addDecoderSizePrefix)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_8__.getUtf8Decoder)(), (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Decoder)())],\n    [\"fromOwner\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getAddressDecoder)()]\n  ]);\n}\nfunction getTransferSolWithSeedInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.combineCodec)(\n    getTransferSolWithSeedInstructionDataEncoder(),\n    getTransferSolWithSeedInstructionDataDecoder()\n  );\n}\nfunction getTransferSolWithSeedInstruction(input, config) {\n  const programAddress = config?.programAddress ?? SYSTEM_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    source: { value: input.source ?? null, isWritable: true },\n    baseAccount: { value: input.baseAccount ?? null, isWritable: false },\n    destination: { value: input.destination ?? null, isWritable: true }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const getAccountMeta = getAccountMetaFactory();\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.source),\n      getAccountMeta(accounts.baseAccount),\n      getAccountMeta(accounts.destination)\n    ],\n    programAddress,\n    data: getTransferSolWithSeedInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseTransferSolWithSeedInstruction(instruction) {\n  if (instruction.accounts.length < 3) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      source: getNextAccount(),\n      baseAccount: getNextAccount(),\n      destination: getNextAccount()\n    },\n    data: getTransferSolWithSeedInstructionDataDecoder().decode(\n      instruction.data\n    )\n  };\n}\nvar UPGRADE_NONCE_ACCOUNT_DISCRIMINATOR = 12;\nfunction getUpgradeNonceAccountDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(UPGRADE_NONCE_ACCOUNT_DISCRIMINATOR);\n}\nfunction getUpgradeNonceAccountInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)()]]),\n    (value) => ({\n      ...value,\n      discriminator: UPGRADE_NONCE_ACCOUNT_DISCRIMINATOR\n    })\n  );\n}\nfunction getUpgradeNonceAccountInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Decoder)()]]);\n}\nfunction getUpgradeNonceAccountInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.combineCodec)(\n    getUpgradeNonceAccountInstructionDataEncoder(),\n    getUpgradeNonceAccountInstructionDataDecoder()\n  );\n}\nfunction getUpgradeNonceAccountInstruction(input, config) {\n  const programAddress = config?.programAddress ?? SYSTEM_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    nonceAccount: { value: input.nonceAccount ?? null, isWritable: true }\n  };\n  const accounts = originalAccounts;\n  const getAccountMeta = getAccountMetaFactory();\n  const instruction = {\n    accounts: [getAccountMeta(accounts.nonceAccount)],\n    programAddress,\n    data: getUpgradeNonceAccountInstructionDataEncoder().encode({})\n  };\n  return instruction;\n}\nfunction parseUpgradeNonceAccountInstruction(instruction) {\n  if (instruction.accounts.length < 1) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      nonceAccount: getNextAccount()\n    },\n    data: getUpgradeNonceAccountInstructionDataDecoder().decode(\n      instruction.data\n    )\n  };\n}\nvar WITHDRAW_NONCE_ACCOUNT_DISCRIMINATOR = 5;\nfunction getWithdrawNonceAccountDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)().encode(WITHDRAW_NONCE_ACCOUNT_DISCRIMINATOR);\n}\nfunction getWithdrawNonceAccountInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Encoder)()],\n      [\"withdrawAmount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Encoder)()]\n    ]),\n    (value) => ({\n      ...value,\n      discriminator: WITHDRAW_NONCE_ACCOUNT_DISCRIMINATOR\n    })\n  );\n}\nfunction getWithdrawNonceAccountInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU32Decoder)()],\n    [\"withdrawAmount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getU64Decoder)()]\n  ]);\n}\nfunction getWithdrawNonceAccountInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.combineCodec)(\n    getWithdrawNonceAccountInstructionDataEncoder(),\n    getWithdrawNonceAccountInstructionDataDecoder()\n  );\n}\nfunction getWithdrawNonceAccountInstruction(input, config) {\n  const programAddress = config?.programAddress ?? SYSTEM_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    nonceAccount: { value: input.nonceAccount ?? null, isWritable: true },\n    recipientAccount: {\n      value: input.recipientAccount ?? null,\n      isWritable: true\n    },\n    recentBlockhashesSysvar: {\n      value: input.recentBlockhashesSysvar ?? null,\n      isWritable: false\n    },\n    rentSysvar: { value: input.rentSysvar ?? null, isWritable: false },\n    nonceAuthority: { value: input.nonceAuthority ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  if (!accounts.recentBlockhashesSysvar.value) {\n    accounts.recentBlockhashesSysvar.value = \"SysvarRecentB1ockHashes11111111111111111111\";\n  }\n  if (!accounts.rentSysvar.value) {\n    accounts.rentSysvar.value = \"SysvarRent111111111111111111111111111111111\";\n  }\n  const getAccountMeta = getAccountMetaFactory();\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.nonceAccount),\n      getAccountMeta(accounts.recipientAccount),\n      getAccountMeta(accounts.recentBlockhashesSysvar),\n      getAccountMeta(accounts.rentSysvar),\n      getAccountMeta(accounts.nonceAuthority)\n    ],\n    programAddress,\n    data: getWithdrawNonceAccountInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseWithdrawNonceAccountInstruction(instruction) {\n  if (instruction.accounts.length < 5) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      nonceAccount: getNextAccount(),\n      recipientAccount: getNextAccount(),\n      recentBlockhashesSysvar: getNextAccount(),\n      rentSysvar: getNextAccount(),\n      nonceAuthority: getNextAccount()\n    },\n    data: getWithdrawNonceAccountInstructionDataDecoder().decode(\n      instruction.data\n    )\n  };\n}\n\n\n//# sourceMappingURL=index.mjs.map\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solana-program/system/dist/src/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solana-program/token/dist/src/index.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/@solana-program/token/dist/src/index.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AMOUNT_TO_UI_AMOUNT_DISCRIMINATOR: () => (/* binding */ AMOUNT_TO_UI_AMOUNT_DISCRIMINATOR),\n/* harmony export */   APPROVE_CHECKED_DISCRIMINATOR: () => (/* binding */ APPROVE_CHECKED_DISCRIMINATOR),\n/* harmony export */   APPROVE_DISCRIMINATOR: () => (/* binding */ APPROVE_DISCRIMINATOR),\n/* harmony export */   ASSOCIATED_TOKEN_ERROR__INVALID_OWNER: () => (/* binding */ ASSOCIATED_TOKEN_ERROR__INVALID_OWNER),\n/* harmony export */   ASSOCIATED_TOKEN_PROGRAM_ADDRESS: () => (/* binding */ ASSOCIATED_TOKEN_PROGRAM_ADDRESS),\n/* harmony export */   AccountState: () => (/* binding */ AccountState),\n/* harmony export */   AssociatedTokenInstruction: () => (/* binding */ AssociatedTokenInstruction),\n/* harmony export */   AuthorityType: () => (/* binding */ AuthorityType),\n/* harmony export */   BURN_CHECKED_DISCRIMINATOR: () => (/* binding */ BURN_CHECKED_DISCRIMINATOR),\n/* harmony export */   BURN_DISCRIMINATOR: () => (/* binding */ BURN_DISCRIMINATOR),\n/* harmony export */   CLOSE_ACCOUNT_DISCRIMINATOR: () => (/* binding */ CLOSE_ACCOUNT_DISCRIMINATOR),\n/* harmony export */   CREATE_ASSOCIATED_TOKEN_DISCRIMINATOR: () => (/* binding */ CREATE_ASSOCIATED_TOKEN_DISCRIMINATOR),\n/* harmony export */   CREATE_ASSOCIATED_TOKEN_IDEMPOTENT_DISCRIMINATOR: () => (/* binding */ CREATE_ASSOCIATED_TOKEN_IDEMPOTENT_DISCRIMINATOR),\n/* harmony export */   FREEZE_ACCOUNT_DISCRIMINATOR: () => (/* binding */ FREEZE_ACCOUNT_DISCRIMINATOR),\n/* harmony export */   GET_ACCOUNT_DATA_SIZE_DISCRIMINATOR: () => (/* binding */ GET_ACCOUNT_DATA_SIZE_DISCRIMINATOR),\n/* harmony export */   INITIALIZE_ACCOUNT2_DISCRIMINATOR: () => (/* binding */ INITIALIZE_ACCOUNT2_DISCRIMINATOR),\n/* harmony export */   INITIALIZE_ACCOUNT3_DISCRIMINATOR: () => (/* binding */ INITIALIZE_ACCOUNT3_DISCRIMINATOR),\n/* harmony export */   INITIALIZE_ACCOUNT_DISCRIMINATOR: () => (/* binding */ INITIALIZE_ACCOUNT_DISCRIMINATOR),\n/* harmony export */   INITIALIZE_IMMUTABLE_OWNER_DISCRIMINATOR: () => (/* binding */ INITIALIZE_IMMUTABLE_OWNER_DISCRIMINATOR),\n/* harmony export */   INITIALIZE_MINT2_DISCRIMINATOR: () => (/* binding */ INITIALIZE_MINT2_DISCRIMINATOR),\n/* harmony export */   INITIALIZE_MINT_DISCRIMINATOR: () => (/* binding */ INITIALIZE_MINT_DISCRIMINATOR),\n/* harmony export */   INITIALIZE_MULTISIG2_DISCRIMINATOR: () => (/* binding */ INITIALIZE_MULTISIG2_DISCRIMINATOR),\n/* harmony export */   INITIALIZE_MULTISIG_DISCRIMINATOR: () => (/* binding */ INITIALIZE_MULTISIG_DISCRIMINATOR),\n/* harmony export */   MINT_TO_CHECKED_DISCRIMINATOR: () => (/* binding */ MINT_TO_CHECKED_DISCRIMINATOR),\n/* harmony export */   MINT_TO_DISCRIMINATOR: () => (/* binding */ MINT_TO_DISCRIMINATOR),\n/* harmony export */   RECOVER_NESTED_ASSOCIATED_TOKEN_DISCRIMINATOR: () => (/* binding */ RECOVER_NESTED_ASSOCIATED_TOKEN_DISCRIMINATOR),\n/* harmony export */   REVOKE_DISCRIMINATOR: () => (/* binding */ REVOKE_DISCRIMINATOR),\n/* harmony export */   SET_AUTHORITY_DISCRIMINATOR: () => (/* binding */ SET_AUTHORITY_DISCRIMINATOR),\n/* harmony export */   SYNC_NATIVE_DISCRIMINATOR: () => (/* binding */ SYNC_NATIVE_DISCRIMINATOR),\n/* harmony export */   THAW_ACCOUNT_DISCRIMINATOR: () => (/* binding */ THAW_ACCOUNT_DISCRIMINATOR),\n/* harmony export */   TOKEN_ERROR__ACCOUNT_FROZEN: () => (/* binding */ TOKEN_ERROR__ACCOUNT_FROZEN),\n/* harmony export */   TOKEN_ERROR__ALREADY_IN_USE: () => (/* binding */ TOKEN_ERROR__ALREADY_IN_USE),\n/* harmony export */   TOKEN_ERROR__AUTHORITY_TYPE_NOT_SUPPORTED: () => (/* binding */ TOKEN_ERROR__AUTHORITY_TYPE_NOT_SUPPORTED),\n/* harmony export */   TOKEN_ERROR__FIXED_SUPPLY: () => (/* binding */ TOKEN_ERROR__FIXED_SUPPLY),\n/* harmony export */   TOKEN_ERROR__INSUFFICIENT_FUNDS: () => (/* binding */ TOKEN_ERROR__INSUFFICIENT_FUNDS),\n/* harmony export */   TOKEN_ERROR__INVALID_INSTRUCTION: () => (/* binding */ TOKEN_ERROR__INVALID_INSTRUCTION),\n/* harmony export */   TOKEN_ERROR__INVALID_MINT: () => (/* binding */ TOKEN_ERROR__INVALID_MINT),\n/* harmony export */   TOKEN_ERROR__INVALID_NUMBER_OF_PROVIDED_SIGNERS: () => (/* binding */ TOKEN_ERROR__INVALID_NUMBER_OF_PROVIDED_SIGNERS),\n/* harmony export */   TOKEN_ERROR__INVALID_NUMBER_OF_REQUIRED_SIGNERS: () => (/* binding */ TOKEN_ERROR__INVALID_NUMBER_OF_REQUIRED_SIGNERS),\n/* harmony export */   TOKEN_ERROR__INVALID_STATE: () => (/* binding */ TOKEN_ERROR__INVALID_STATE),\n/* harmony export */   TOKEN_ERROR__MINT_CANNOT_FREEZE: () => (/* binding */ TOKEN_ERROR__MINT_CANNOT_FREEZE),\n/* harmony export */   TOKEN_ERROR__MINT_DECIMALS_MISMATCH: () => (/* binding */ TOKEN_ERROR__MINT_DECIMALS_MISMATCH),\n/* harmony export */   TOKEN_ERROR__MINT_MISMATCH: () => (/* binding */ TOKEN_ERROR__MINT_MISMATCH),\n/* harmony export */   TOKEN_ERROR__NATIVE_NOT_SUPPORTED: () => (/* binding */ TOKEN_ERROR__NATIVE_NOT_SUPPORTED),\n/* harmony export */   TOKEN_ERROR__NON_NATIVE_HAS_BALANCE: () => (/* binding */ TOKEN_ERROR__NON_NATIVE_HAS_BALANCE),\n/* harmony export */   TOKEN_ERROR__NON_NATIVE_NOT_SUPPORTED: () => (/* binding */ TOKEN_ERROR__NON_NATIVE_NOT_SUPPORTED),\n/* harmony export */   TOKEN_ERROR__NOT_RENT_EXEMPT: () => (/* binding */ TOKEN_ERROR__NOT_RENT_EXEMPT),\n/* harmony export */   TOKEN_ERROR__OVERFLOW: () => (/* binding */ TOKEN_ERROR__OVERFLOW),\n/* harmony export */   TOKEN_ERROR__OWNER_MISMATCH: () => (/* binding */ TOKEN_ERROR__OWNER_MISMATCH),\n/* harmony export */   TOKEN_ERROR__UNINITIALIZED_STATE: () => (/* binding */ TOKEN_ERROR__UNINITIALIZED_STATE),\n/* harmony export */   TOKEN_PROGRAM_ADDRESS: () => (/* binding */ TOKEN_PROGRAM_ADDRESS),\n/* harmony export */   TRANSFER_CHECKED_DISCRIMINATOR: () => (/* binding */ TRANSFER_CHECKED_DISCRIMINATOR),\n/* harmony export */   TRANSFER_DISCRIMINATOR: () => (/* binding */ TRANSFER_DISCRIMINATOR),\n/* harmony export */   TokenAccount: () => (/* binding */ TokenAccount),\n/* harmony export */   TokenInstruction: () => (/* binding */ TokenInstruction),\n/* harmony export */   UI_AMOUNT_TO_AMOUNT_DISCRIMINATOR: () => (/* binding */ UI_AMOUNT_TO_AMOUNT_DISCRIMINATOR),\n/* harmony export */   decodeMint: () => (/* binding */ decodeMint),\n/* harmony export */   decodeMultisig: () => (/* binding */ decodeMultisig),\n/* harmony export */   decodeToken: () => (/* binding */ decodeToken),\n/* harmony export */   fetchAllMaybeMint: () => (/* binding */ fetchAllMaybeMint),\n/* harmony export */   fetchAllMaybeMultisig: () => (/* binding */ fetchAllMaybeMultisig),\n/* harmony export */   fetchAllMaybeToken: () => (/* binding */ fetchAllMaybeToken),\n/* harmony export */   fetchAllMint: () => (/* binding */ fetchAllMint),\n/* harmony export */   fetchAllMultisig: () => (/* binding */ fetchAllMultisig),\n/* harmony export */   fetchAllToken: () => (/* binding */ fetchAllToken),\n/* harmony export */   fetchMaybeMint: () => (/* binding */ fetchMaybeMint),\n/* harmony export */   fetchMaybeMultisig: () => (/* binding */ fetchMaybeMultisig),\n/* harmony export */   fetchMaybeToken: () => (/* binding */ fetchMaybeToken),\n/* harmony export */   fetchMint: () => (/* binding */ fetchMint),\n/* harmony export */   fetchMultisig: () => (/* binding */ fetchMultisig),\n/* harmony export */   fetchToken: () => (/* binding */ fetchToken),\n/* harmony export */   findAssociatedTokenPda: () => (/* binding */ findAssociatedTokenPda),\n/* harmony export */   getAccountStateCodec: () => (/* binding */ getAccountStateCodec),\n/* harmony export */   getAccountStateDecoder: () => (/* binding */ getAccountStateDecoder),\n/* harmony export */   getAccountStateEncoder: () => (/* binding */ getAccountStateEncoder),\n/* harmony export */   getAmountToUiAmountDiscriminatorBytes: () => (/* binding */ getAmountToUiAmountDiscriminatorBytes),\n/* harmony export */   getAmountToUiAmountInstruction: () => (/* binding */ getAmountToUiAmountInstruction),\n/* harmony export */   getAmountToUiAmountInstructionDataCodec: () => (/* binding */ getAmountToUiAmountInstructionDataCodec),\n/* harmony export */   getAmountToUiAmountInstructionDataDecoder: () => (/* binding */ getAmountToUiAmountInstructionDataDecoder),\n/* harmony export */   getAmountToUiAmountInstructionDataEncoder: () => (/* binding */ getAmountToUiAmountInstructionDataEncoder),\n/* harmony export */   getApproveCheckedDiscriminatorBytes: () => (/* binding */ getApproveCheckedDiscriminatorBytes),\n/* harmony export */   getApproveCheckedInstruction: () => (/* binding */ getApproveCheckedInstruction),\n/* harmony export */   getApproveCheckedInstructionDataCodec: () => (/* binding */ getApproveCheckedInstructionDataCodec),\n/* harmony export */   getApproveCheckedInstructionDataDecoder: () => (/* binding */ getApproveCheckedInstructionDataDecoder),\n/* harmony export */   getApproveCheckedInstructionDataEncoder: () => (/* binding */ getApproveCheckedInstructionDataEncoder),\n/* harmony export */   getApproveDiscriminatorBytes: () => (/* binding */ getApproveDiscriminatorBytes),\n/* harmony export */   getApproveInstruction: () => (/* binding */ getApproveInstruction),\n/* harmony export */   getApproveInstructionDataCodec: () => (/* binding */ getApproveInstructionDataCodec),\n/* harmony export */   getApproveInstructionDataDecoder: () => (/* binding */ getApproveInstructionDataDecoder),\n/* harmony export */   getApproveInstructionDataEncoder: () => (/* binding */ getApproveInstructionDataEncoder),\n/* harmony export */   getAssociatedTokenErrorMessage: () => (/* binding */ getAssociatedTokenErrorMessage),\n/* harmony export */   getAuthorityTypeCodec: () => (/* binding */ getAuthorityTypeCodec),\n/* harmony export */   getAuthorityTypeDecoder: () => (/* binding */ getAuthorityTypeDecoder),\n/* harmony export */   getAuthorityTypeEncoder: () => (/* binding */ getAuthorityTypeEncoder),\n/* harmony export */   getBurnCheckedDiscriminatorBytes: () => (/* binding */ getBurnCheckedDiscriminatorBytes),\n/* harmony export */   getBurnCheckedInstruction: () => (/* binding */ getBurnCheckedInstruction),\n/* harmony export */   getBurnCheckedInstructionDataCodec: () => (/* binding */ getBurnCheckedInstructionDataCodec),\n/* harmony export */   getBurnCheckedInstructionDataDecoder: () => (/* binding */ getBurnCheckedInstructionDataDecoder),\n/* harmony export */   getBurnCheckedInstructionDataEncoder: () => (/* binding */ getBurnCheckedInstructionDataEncoder),\n/* harmony export */   getBurnDiscriminatorBytes: () => (/* binding */ getBurnDiscriminatorBytes),\n/* harmony export */   getBurnInstruction: () => (/* binding */ getBurnInstruction),\n/* harmony export */   getBurnInstructionDataCodec: () => (/* binding */ getBurnInstructionDataCodec),\n/* harmony export */   getBurnInstructionDataDecoder: () => (/* binding */ getBurnInstructionDataDecoder),\n/* harmony export */   getBurnInstructionDataEncoder: () => (/* binding */ getBurnInstructionDataEncoder),\n/* harmony export */   getCloseAccountDiscriminatorBytes: () => (/* binding */ getCloseAccountDiscriminatorBytes),\n/* harmony export */   getCloseAccountInstruction: () => (/* binding */ getCloseAccountInstruction),\n/* harmony export */   getCloseAccountInstructionDataCodec: () => (/* binding */ getCloseAccountInstructionDataCodec),\n/* harmony export */   getCloseAccountInstructionDataDecoder: () => (/* binding */ getCloseAccountInstructionDataDecoder),\n/* harmony export */   getCloseAccountInstructionDataEncoder: () => (/* binding */ getCloseAccountInstructionDataEncoder),\n/* harmony export */   getCreateAssociatedTokenDiscriminatorBytes: () => (/* binding */ getCreateAssociatedTokenDiscriminatorBytes),\n/* harmony export */   getCreateAssociatedTokenIdempotentDiscriminatorBytes: () => (/* binding */ getCreateAssociatedTokenIdempotentDiscriminatorBytes),\n/* harmony export */   getCreateAssociatedTokenIdempotentInstruction: () => (/* binding */ getCreateAssociatedTokenIdempotentInstruction),\n/* harmony export */   getCreateAssociatedTokenIdempotentInstructionAsync: () => (/* binding */ getCreateAssociatedTokenIdempotentInstructionAsync),\n/* harmony export */   getCreateAssociatedTokenIdempotentInstructionDataCodec: () => (/* binding */ getCreateAssociatedTokenIdempotentInstructionDataCodec),\n/* harmony export */   getCreateAssociatedTokenIdempotentInstructionDataDecoder: () => (/* binding */ getCreateAssociatedTokenIdempotentInstructionDataDecoder),\n/* harmony export */   getCreateAssociatedTokenIdempotentInstructionDataEncoder: () => (/* binding */ getCreateAssociatedTokenIdempotentInstructionDataEncoder),\n/* harmony export */   getCreateAssociatedTokenInstruction: () => (/* binding */ getCreateAssociatedTokenInstruction),\n/* harmony export */   getCreateAssociatedTokenInstructionAsync: () => (/* binding */ getCreateAssociatedTokenInstructionAsync),\n/* harmony export */   getCreateAssociatedTokenInstructionDataCodec: () => (/* binding */ getCreateAssociatedTokenInstructionDataCodec),\n/* harmony export */   getCreateAssociatedTokenInstructionDataDecoder: () => (/* binding */ getCreateAssociatedTokenInstructionDataDecoder),\n/* harmony export */   getCreateAssociatedTokenInstructionDataEncoder: () => (/* binding */ getCreateAssociatedTokenInstructionDataEncoder),\n/* harmony export */   getFreezeAccountDiscriminatorBytes: () => (/* binding */ getFreezeAccountDiscriminatorBytes),\n/* harmony export */   getFreezeAccountInstruction: () => (/* binding */ getFreezeAccountInstruction),\n/* harmony export */   getFreezeAccountInstructionDataCodec: () => (/* binding */ getFreezeAccountInstructionDataCodec),\n/* harmony export */   getFreezeAccountInstructionDataDecoder: () => (/* binding */ getFreezeAccountInstructionDataDecoder),\n/* harmony export */   getFreezeAccountInstructionDataEncoder: () => (/* binding */ getFreezeAccountInstructionDataEncoder),\n/* harmony export */   getGetAccountDataSizeDiscriminatorBytes: () => (/* binding */ getGetAccountDataSizeDiscriminatorBytes),\n/* harmony export */   getGetAccountDataSizeInstruction: () => (/* binding */ getGetAccountDataSizeInstruction),\n/* harmony export */   getGetAccountDataSizeInstructionDataCodec: () => (/* binding */ getGetAccountDataSizeInstructionDataCodec),\n/* harmony export */   getGetAccountDataSizeInstructionDataDecoder: () => (/* binding */ getGetAccountDataSizeInstructionDataDecoder),\n/* harmony export */   getGetAccountDataSizeInstructionDataEncoder: () => (/* binding */ getGetAccountDataSizeInstructionDataEncoder),\n/* harmony export */   getInitializeAccount2DiscriminatorBytes: () => (/* binding */ getInitializeAccount2DiscriminatorBytes),\n/* harmony export */   getInitializeAccount2Instruction: () => (/* binding */ getInitializeAccount2Instruction),\n/* harmony export */   getInitializeAccount2InstructionDataCodec: () => (/* binding */ getInitializeAccount2InstructionDataCodec),\n/* harmony export */   getInitializeAccount2InstructionDataDecoder: () => (/* binding */ getInitializeAccount2InstructionDataDecoder),\n/* harmony export */   getInitializeAccount2InstructionDataEncoder: () => (/* binding */ getInitializeAccount2InstructionDataEncoder),\n/* harmony export */   getInitializeAccount3DiscriminatorBytes: () => (/* binding */ getInitializeAccount3DiscriminatorBytes),\n/* harmony export */   getInitializeAccount3Instruction: () => (/* binding */ getInitializeAccount3Instruction),\n/* harmony export */   getInitializeAccount3InstructionDataCodec: () => (/* binding */ getInitializeAccount3InstructionDataCodec),\n/* harmony export */   getInitializeAccount3InstructionDataDecoder: () => (/* binding */ getInitializeAccount3InstructionDataDecoder),\n/* harmony export */   getInitializeAccount3InstructionDataEncoder: () => (/* binding */ getInitializeAccount3InstructionDataEncoder),\n/* harmony export */   getInitializeAccountDiscriminatorBytes: () => (/* binding */ getInitializeAccountDiscriminatorBytes),\n/* harmony export */   getInitializeAccountInstruction: () => (/* binding */ getInitializeAccountInstruction),\n/* harmony export */   getInitializeAccountInstructionDataCodec: () => (/* binding */ getInitializeAccountInstructionDataCodec),\n/* harmony export */   getInitializeAccountInstructionDataDecoder: () => (/* binding */ getInitializeAccountInstructionDataDecoder),\n/* harmony export */   getInitializeAccountInstructionDataEncoder: () => (/* binding */ getInitializeAccountInstructionDataEncoder),\n/* harmony export */   getInitializeImmutableOwnerDiscriminatorBytes: () => (/* binding */ getInitializeImmutableOwnerDiscriminatorBytes),\n/* harmony export */   getInitializeImmutableOwnerInstruction: () => (/* binding */ getInitializeImmutableOwnerInstruction),\n/* harmony export */   getInitializeImmutableOwnerInstructionDataCodec: () => (/* binding */ getInitializeImmutableOwnerInstructionDataCodec),\n/* harmony export */   getInitializeImmutableOwnerInstructionDataDecoder: () => (/* binding */ getInitializeImmutableOwnerInstructionDataDecoder),\n/* harmony export */   getInitializeImmutableOwnerInstructionDataEncoder: () => (/* binding */ getInitializeImmutableOwnerInstructionDataEncoder),\n/* harmony export */   getInitializeMint2DiscriminatorBytes: () => (/* binding */ getInitializeMint2DiscriminatorBytes),\n/* harmony export */   getInitializeMint2Instruction: () => (/* binding */ getInitializeMint2Instruction),\n/* harmony export */   getInitializeMint2InstructionDataCodec: () => (/* binding */ getInitializeMint2InstructionDataCodec),\n/* harmony export */   getInitializeMint2InstructionDataDecoder: () => (/* binding */ getInitializeMint2InstructionDataDecoder),\n/* harmony export */   getInitializeMint2InstructionDataEncoder: () => (/* binding */ getInitializeMint2InstructionDataEncoder),\n/* harmony export */   getInitializeMintDiscriminatorBytes: () => (/* binding */ getInitializeMintDiscriminatorBytes),\n/* harmony export */   getInitializeMintInstruction: () => (/* binding */ getInitializeMintInstruction),\n/* harmony export */   getInitializeMintInstructionDataCodec: () => (/* binding */ getInitializeMintInstructionDataCodec),\n/* harmony export */   getInitializeMintInstructionDataDecoder: () => (/* binding */ getInitializeMintInstructionDataDecoder),\n/* harmony export */   getInitializeMintInstructionDataEncoder: () => (/* binding */ getInitializeMintInstructionDataEncoder),\n/* harmony export */   getInitializeMultisig2DiscriminatorBytes: () => (/* binding */ getInitializeMultisig2DiscriminatorBytes),\n/* harmony export */   getInitializeMultisig2Instruction: () => (/* binding */ getInitializeMultisig2Instruction),\n/* harmony export */   getInitializeMultisig2InstructionDataCodec: () => (/* binding */ getInitializeMultisig2InstructionDataCodec),\n/* harmony export */   getInitializeMultisig2InstructionDataDecoder: () => (/* binding */ getInitializeMultisig2InstructionDataDecoder),\n/* harmony export */   getInitializeMultisig2InstructionDataEncoder: () => (/* binding */ getInitializeMultisig2InstructionDataEncoder),\n/* harmony export */   getInitializeMultisigDiscriminatorBytes: () => (/* binding */ getInitializeMultisigDiscriminatorBytes),\n/* harmony export */   getInitializeMultisigInstruction: () => (/* binding */ getInitializeMultisigInstruction),\n/* harmony export */   getInitializeMultisigInstructionDataCodec: () => (/* binding */ getInitializeMultisigInstructionDataCodec),\n/* harmony export */   getInitializeMultisigInstructionDataDecoder: () => (/* binding */ getInitializeMultisigInstructionDataDecoder),\n/* harmony export */   getInitializeMultisigInstructionDataEncoder: () => (/* binding */ getInitializeMultisigInstructionDataEncoder),\n/* harmony export */   getMintCodec: () => (/* binding */ getMintCodec),\n/* harmony export */   getMintDecoder: () => (/* binding */ getMintDecoder),\n/* harmony export */   getMintEncoder: () => (/* binding */ getMintEncoder),\n/* harmony export */   getMintSize: () => (/* binding */ getMintSize),\n/* harmony export */   getMintToCheckedDiscriminatorBytes: () => (/* binding */ getMintToCheckedDiscriminatorBytes),\n/* harmony export */   getMintToCheckedInstruction: () => (/* binding */ getMintToCheckedInstruction),\n/* harmony export */   getMintToCheckedInstructionDataCodec: () => (/* binding */ getMintToCheckedInstructionDataCodec),\n/* harmony export */   getMintToCheckedInstructionDataDecoder: () => (/* binding */ getMintToCheckedInstructionDataDecoder),\n/* harmony export */   getMintToCheckedInstructionDataEncoder: () => (/* binding */ getMintToCheckedInstructionDataEncoder),\n/* harmony export */   getMintToDiscriminatorBytes: () => (/* binding */ getMintToDiscriminatorBytes),\n/* harmony export */   getMintToInstruction: () => (/* binding */ getMintToInstruction),\n/* harmony export */   getMintToInstructionDataCodec: () => (/* binding */ getMintToInstructionDataCodec),\n/* harmony export */   getMintToInstructionDataDecoder: () => (/* binding */ getMintToInstructionDataDecoder),\n/* harmony export */   getMintToInstructionDataEncoder: () => (/* binding */ getMintToInstructionDataEncoder),\n/* harmony export */   getMultisigCodec: () => (/* binding */ getMultisigCodec),\n/* harmony export */   getMultisigDecoder: () => (/* binding */ getMultisigDecoder),\n/* harmony export */   getMultisigEncoder: () => (/* binding */ getMultisigEncoder),\n/* harmony export */   getMultisigSize: () => (/* binding */ getMultisigSize),\n/* harmony export */   getRecoverNestedAssociatedTokenDiscriminatorBytes: () => (/* binding */ getRecoverNestedAssociatedTokenDiscriminatorBytes),\n/* harmony export */   getRecoverNestedAssociatedTokenInstruction: () => (/* binding */ getRecoverNestedAssociatedTokenInstruction),\n/* harmony export */   getRecoverNestedAssociatedTokenInstructionAsync: () => (/* binding */ getRecoverNestedAssociatedTokenInstructionAsync),\n/* harmony export */   getRecoverNestedAssociatedTokenInstructionDataCodec: () => (/* binding */ getRecoverNestedAssociatedTokenInstructionDataCodec),\n/* harmony export */   getRecoverNestedAssociatedTokenInstructionDataDecoder: () => (/* binding */ getRecoverNestedAssociatedTokenInstructionDataDecoder),\n/* harmony export */   getRecoverNestedAssociatedTokenInstructionDataEncoder: () => (/* binding */ getRecoverNestedAssociatedTokenInstructionDataEncoder),\n/* harmony export */   getRevokeDiscriminatorBytes: () => (/* binding */ getRevokeDiscriminatorBytes),\n/* harmony export */   getRevokeInstruction: () => (/* binding */ getRevokeInstruction),\n/* harmony export */   getRevokeInstructionDataCodec: () => (/* binding */ getRevokeInstructionDataCodec),\n/* harmony export */   getRevokeInstructionDataDecoder: () => (/* binding */ getRevokeInstructionDataDecoder),\n/* harmony export */   getRevokeInstructionDataEncoder: () => (/* binding */ getRevokeInstructionDataEncoder),\n/* harmony export */   getSetAuthorityDiscriminatorBytes: () => (/* binding */ getSetAuthorityDiscriminatorBytes),\n/* harmony export */   getSetAuthorityInstruction: () => (/* binding */ getSetAuthorityInstruction),\n/* harmony export */   getSetAuthorityInstructionDataCodec: () => (/* binding */ getSetAuthorityInstructionDataCodec),\n/* harmony export */   getSetAuthorityInstructionDataDecoder: () => (/* binding */ getSetAuthorityInstructionDataDecoder),\n/* harmony export */   getSetAuthorityInstructionDataEncoder: () => (/* binding */ getSetAuthorityInstructionDataEncoder),\n/* harmony export */   getSyncNativeDiscriminatorBytes: () => (/* binding */ getSyncNativeDiscriminatorBytes),\n/* harmony export */   getSyncNativeInstruction: () => (/* binding */ getSyncNativeInstruction),\n/* harmony export */   getSyncNativeInstructionDataCodec: () => (/* binding */ getSyncNativeInstructionDataCodec),\n/* harmony export */   getSyncNativeInstructionDataDecoder: () => (/* binding */ getSyncNativeInstructionDataDecoder),\n/* harmony export */   getSyncNativeInstructionDataEncoder: () => (/* binding */ getSyncNativeInstructionDataEncoder),\n/* harmony export */   getThawAccountDiscriminatorBytes: () => (/* binding */ getThawAccountDiscriminatorBytes),\n/* harmony export */   getThawAccountInstruction: () => (/* binding */ getThawAccountInstruction),\n/* harmony export */   getThawAccountInstructionDataCodec: () => (/* binding */ getThawAccountInstructionDataCodec),\n/* harmony export */   getThawAccountInstructionDataDecoder: () => (/* binding */ getThawAccountInstructionDataDecoder),\n/* harmony export */   getThawAccountInstructionDataEncoder: () => (/* binding */ getThawAccountInstructionDataEncoder),\n/* harmony export */   getTokenCodec: () => (/* binding */ getTokenCodec),\n/* harmony export */   getTokenDecoder: () => (/* binding */ getTokenDecoder),\n/* harmony export */   getTokenEncoder: () => (/* binding */ getTokenEncoder),\n/* harmony export */   getTokenErrorMessage: () => (/* binding */ getTokenErrorMessage),\n/* harmony export */   getTokenSize: () => (/* binding */ getTokenSize),\n/* harmony export */   getTransferCheckedDiscriminatorBytes: () => (/* binding */ getTransferCheckedDiscriminatorBytes),\n/* harmony export */   getTransferCheckedInstruction: () => (/* binding */ getTransferCheckedInstruction),\n/* harmony export */   getTransferCheckedInstructionDataCodec: () => (/* binding */ getTransferCheckedInstructionDataCodec),\n/* harmony export */   getTransferCheckedInstructionDataDecoder: () => (/* binding */ getTransferCheckedInstructionDataDecoder),\n/* harmony export */   getTransferCheckedInstructionDataEncoder: () => (/* binding */ getTransferCheckedInstructionDataEncoder),\n/* harmony export */   getTransferDiscriminatorBytes: () => (/* binding */ getTransferDiscriminatorBytes),\n/* harmony export */   getTransferInstruction: () => (/* binding */ getTransferInstruction),\n/* harmony export */   getTransferInstructionDataCodec: () => (/* binding */ getTransferInstructionDataCodec),\n/* harmony export */   getTransferInstructionDataDecoder: () => (/* binding */ getTransferInstructionDataDecoder),\n/* harmony export */   getTransferInstructionDataEncoder: () => (/* binding */ getTransferInstructionDataEncoder),\n/* harmony export */   getUiAmountToAmountDiscriminatorBytes: () => (/* binding */ getUiAmountToAmountDiscriminatorBytes),\n/* harmony export */   getUiAmountToAmountInstruction: () => (/* binding */ getUiAmountToAmountInstruction),\n/* harmony export */   getUiAmountToAmountInstructionDataCodec: () => (/* binding */ getUiAmountToAmountInstructionDataCodec),\n/* harmony export */   getUiAmountToAmountInstructionDataDecoder: () => (/* binding */ getUiAmountToAmountInstructionDataDecoder),\n/* harmony export */   getUiAmountToAmountInstructionDataEncoder: () => (/* binding */ getUiAmountToAmountInstructionDataEncoder),\n/* harmony export */   identifyAssociatedTokenInstruction: () => (/* binding */ identifyAssociatedTokenInstruction),\n/* harmony export */   identifyTokenAccount: () => (/* binding */ identifyTokenAccount),\n/* harmony export */   identifyTokenInstruction: () => (/* binding */ identifyTokenInstruction),\n/* harmony export */   isAssociatedTokenError: () => (/* binding */ isAssociatedTokenError),\n/* harmony export */   isTokenError: () => (/* binding */ isTokenError),\n/* harmony export */   parseAmountToUiAmountInstruction: () => (/* binding */ parseAmountToUiAmountInstruction),\n/* harmony export */   parseApproveCheckedInstruction: () => (/* binding */ parseApproveCheckedInstruction),\n/* harmony export */   parseApproveInstruction: () => (/* binding */ parseApproveInstruction),\n/* harmony export */   parseBurnCheckedInstruction: () => (/* binding */ parseBurnCheckedInstruction),\n/* harmony export */   parseBurnInstruction: () => (/* binding */ parseBurnInstruction),\n/* harmony export */   parseCloseAccountInstruction: () => (/* binding */ parseCloseAccountInstruction),\n/* harmony export */   parseCreateAssociatedTokenIdempotentInstruction: () => (/* binding */ parseCreateAssociatedTokenIdempotentInstruction),\n/* harmony export */   parseCreateAssociatedTokenInstruction: () => (/* binding */ parseCreateAssociatedTokenInstruction),\n/* harmony export */   parseFreezeAccountInstruction: () => (/* binding */ parseFreezeAccountInstruction),\n/* harmony export */   parseGetAccountDataSizeInstruction: () => (/* binding */ parseGetAccountDataSizeInstruction),\n/* harmony export */   parseInitializeAccount2Instruction: () => (/* binding */ parseInitializeAccount2Instruction),\n/* harmony export */   parseInitializeAccount3Instruction: () => (/* binding */ parseInitializeAccount3Instruction),\n/* harmony export */   parseInitializeAccountInstruction: () => (/* binding */ parseInitializeAccountInstruction),\n/* harmony export */   parseInitializeImmutableOwnerInstruction: () => (/* binding */ parseInitializeImmutableOwnerInstruction),\n/* harmony export */   parseInitializeMint2Instruction: () => (/* binding */ parseInitializeMint2Instruction),\n/* harmony export */   parseInitializeMintInstruction: () => (/* binding */ parseInitializeMintInstruction),\n/* harmony export */   parseInitializeMultisig2Instruction: () => (/* binding */ parseInitializeMultisig2Instruction),\n/* harmony export */   parseInitializeMultisigInstruction: () => (/* binding */ parseInitializeMultisigInstruction),\n/* harmony export */   parseMintToCheckedInstruction: () => (/* binding */ parseMintToCheckedInstruction),\n/* harmony export */   parseMintToInstruction: () => (/* binding */ parseMintToInstruction),\n/* harmony export */   parseRecoverNestedAssociatedTokenInstruction: () => (/* binding */ parseRecoverNestedAssociatedTokenInstruction),\n/* harmony export */   parseRevokeInstruction: () => (/* binding */ parseRevokeInstruction),\n/* harmony export */   parseSetAuthorityInstruction: () => (/* binding */ parseSetAuthorityInstruction),\n/* harmony export */   parseSyncNativeInstruction: () => (/* binding */ parseSyncNativeInstruction),\n/* harmony export */   parseThawAccountInstruction: () => (/* binding */ parseThawAccountInstruction),\n/* harmony export */   parseTransferCheckedInstruction: () => (/* binding */ parseTransferCheckedInstruction),\n/* harmony export */   parseTransferInstruction: () => (/* binding */ parseTransferInstruction),\n/* harmony export */   parseUiAmountToAmountInstruction: () => (/* binding */ parseUiAmountToAmountInstruction)\n/* harmony export */ });\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/codecs-data-structures/dist/index.node.mjs\");\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/options/dist/index.node.mjs\");\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/addresses/dist/index.node.mjs\");\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/codecs-numbers/dist/index.node.mjs\");\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/codecs-core/dist/index.node.mjs\");\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/accounts/dist/index.node.mjs\");\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/programs/dist/index.node.mjs\");\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/instructions/dist/index.node.mjs\");\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/signers/dist/index.node.mjs\");\n/* harmony import */ var _solana_kit__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @solana/kit */ \"(ssr)/./node_modules/@solana/codecs-strings/dist/index.node.mjs\");\n\n\n// src/generated/accounts/mint.ts\nfunction getMintEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n    [\n      \"mintAuthority\",\n      (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getOptionEncoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressEncoder)(), {\n        prefix: (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU32Encoder)(),\n        noneValue: \"zeroes\"\n      })\n    ],\n    [\"supply\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Encoder)()],\n    [\"decimals\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n    [\"isInitialized\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getBooleanEncoder)()],\n    [\n      \"freezeAuthority\",\n      (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getOptionEncoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressEncoder)(), {\n        prefix: (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU32Encoder)(),\n        noneValue: \"zeroes\"\n      })\n    ]\n  ]);\n}\nfunction getMintDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\n      \"mintAuthority\",\n      (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getOptionDecoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressDecoder)(), {\n        prefix: (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU32Decoder)(),\n        noneValue: \"zeroes\"\n      })\n    ],\n    [\"supply\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Decoder)()],\n    [\"decimals\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"isInitialized\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getBooleanDecoder)()],\n    [\n      \"freezeAuthority\",\n      (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getOptionDecoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressDecoder)(), {\n        prefix: (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU32Decoder)(),\n        noneValue: \"zeroes\"\n      })\n    ]\n  ]);\n}\nfunction getMintCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(getMintEncoder(), getMintDecoder());\n}\nfunction decodeMint(encodedAccount) {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_5__.decodeAccount)(\n    encodedAccount,\n    getMintDecoder()\n  );\n}\nasync function fetchMint(rpc, address, config) {\n  const maybeAccount = await fetchMaybeMint(rpc, address, config);\n  (0,_solana_kit__WEBPACK_IMPORTED_MODULE_5__.assertAccountExists)(maybeAccount);\n  return maybeAccount;\n}\nasync function fetchMaybeMint(rpc, address, config) {\n  const maybeAccount = await (0,_solana_kit__WEBPACK_IMPORTED_MODULE_5__.fetchEncodedAccount)(rpc, address, config);\n  return decodeMint(maybeAccount);\n}\nasync function fetchAllMint(rpc, addresses, config) {\n  const maybeAccounts = await fetchAllMaybeMint(rpc, addresses, config);\n  (0,_solana_kit__WEBPACK_IMPORTED_MODULE_5__.assertAccountsExist)(maybeAccounts);\n  return maybeAccounts;\n}\nasync function fetchAllMaybeMint(rpc, addresses, config) {\n  const maybeAccounts = await (0,_solana_kit__WEBPACK_IMPORTED_MODULE_5__.fetchEncodedAccounts)(rpc, addresses, config);\n  return maybeAccounts.map((maybeAccount) => decodeMint(maybeAccount));\n}\nfunction getMintSize() {\n  return 82;\n}\nfunction getMultisigEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n    [\"m\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n    [\"n\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n    [\"isInitialized\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getBooleanEncoder)()],\n    [\"signers\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getArrayEncoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressEncoder)(), { size: 11 })]\n  ]);\n}\nfunction getMultisigDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"m\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"n\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"isInitialized\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getBooleanDecoder)()],\n    [\"signers\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getArrayDecoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressDecoder)(), { size: 11 })]\n  ]);\n}\nfunction getMultisigCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(getMultisigEncoder(), getMultisigDecoder());\n}\nfunction decodeMultisig(encodedAccount) {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_5__.decodeAccount)(\n    encodedAccount,\n    getMultisigDecoder()\n  );\n}\nasync function fetchMultisig(rpc, address, config) {\n  const maybeAccount = await fetchMaybeMultisig(rpc, address, config);\n  (0,_solana_kit__WEBPACK_IMPORTED_MODULE_5__.assertAccountExists)(maybeAccount);\n  return maybeAccount;\n}\nasync function fetchMaybeMultisig(rpc, address, config) {\n  const maybeAccount = await (0,_solana_kit__WEBPACK_IMPORTED_MODULE_5__.fetchEncodedAccount)(rpc, address, config);\n  return decodeMultisig(maybeAccount);\n}\nasync function fetchAllMultisig(rpc, addresses, config) {\n  const maybeAccounts = await fetchAllMaybeMultisig(rpc, addresses, config);\n  (0,_solana_kit__WEBPACK_IMPORTED_MODULE_5__.assertAccountsExist)(maybeAccounts);\n  return maybeAccounts;\n}\nasync function fetchAllMaybeMultisig(rpc, addresses, config) {\n  const maybeAccounts = await (0,_solana_kit__WEBPACK_IMPORTED_MODULE_5__.fetchEncodedAccounts)(rpc, addresses, config);\n  return maybeAccounts.map((maybeAccount) => decodeMultisig(maybeAccount));\n}\nfunction getMultisigSize() {\n  return 355;\n}\nvar AccountState = /* @__PURE__ */ ((AccountState2) => {\n  AccountState2[AccountState2[\"Uninitialized\"] = 0] = \"Uninitialized\";\n  AccountState2[AccountState2[\"Initialized\"] = 1] = \"Initialized\";\n  AccountState2[AccountState2[\"Frozen\"] = 2] = \"Frozen\";\n  return AccountState2;\n})(AccountState || {});\nfunction getAccountStateEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getEnumEncoder)(AccountState);\n}\nfunction getAccountStateDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getEnumDecoder)(AccountState);\n}\nfunction getAccountStateCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(getAccountStateEncoder(), getAccountStateDecoder());\n}\nvar AuthorityType = /* @__PURE__ */ ((AuthorityType2) => {\n  AuthorityType2[AuthorityType2[\"MintTokens\"] = 0] = \"MintTokens\";\n  AuthorityType2[AuthorityType2[\"FreezeAccount\"] = 1] = \"FreezeAccount\";\n  AuthorityType2[AuthorityType2[\"AccountOwner\"] = 2] = \"AccountOwner\";\n  AuthorityType2[AuthorityType2[\"CloseAccount\"] = 3] = \"CloseAccount\";\n  return AuthorityType2;\n})(AuthorityType || {});\nfunction getAuthorityTypeEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getEnumEncoder)(AuthorityType);\n}\nfunction getAuthorityTypeDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getEnumDecoder)(AuthorityType);\n}\nfunction getAuthorityTypeCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(getAuthorityTypeEncoder(), getAuthorityTypeDecoder());\n}\n\n// src/generated/accounts/token.ts\nfunction getTokenEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n    [\"mint\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressEncoder)()],\n    [\"owner\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressEncoder)()],\n    [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Encoder)()],\n    [\n      \"delegate\",\n      (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getOptionEncoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressEncoder)(), {\n        prefix: (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU32Encoder)(),\n        noneValue: \"zeroes\"\n      })\n    ],\n    [\"state\", getAccountStateEncoder()],\n    [\n      \"isNative\",\n      (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getOptionEncoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Encoder)(), {\n        prefix: (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU32Encoder)(),\n        noneValue: \"zeroes\"\n      })\n    ],\n    [\"delegatedAmount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Encoder)()],\n    [\n      \"closeAuthority\",\n      (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getOptionEncoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressEncoder)(), {\n        prefix: (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU32Encoder)(),\n        noneValue: \"zeroes\"\n      })\n    ]\n  ]);\n}\nfunction getTokenDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"mint\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressDecoder)()],\n    [\"owner\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressDecoder)()],\n    [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Decoder)()],\n    [\n      \"delegate\",\n      (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getOptionDecoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressDecoder)(), {\n        prefix: (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU32Decoder)(),\n        noneValue: \"zeroes\"\n      })\n    ],\n    [\"state\", getAccountStateDecoder()],\n    [\n      \"isNative\",\n      (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getOptionDecoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Decoder)(), {\n        prefix: (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU32Decoder)(),\n        noneValue: \"zeroes\"\n      })\n    ],\n    [\"delegatedAmount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Decoder)()],\n    [\n      \"closeAuthority\",\n      (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getOptionDecoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressDecoder)(), {\n        prefix: (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU32Decoder)(),\n        noneValue: \"zeroes\"\n      })\n    ]\n  ]);\n}\nfunction getTokenCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(getTokenEncoder(), getTokenDecoder());\n}\nfunction decodeToken(encodedAccount) {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_5__.decodeAccount)(\n    encodedAccount,\n    getTokenDecoder()\n  );\n}\nasync function fetchToken(rpc, address, config) {\n  const maybeAccount = await fetchMaybeToken(rpc, address, config);\n  (0,_solana_kit__WEBPACK_IMPORTED_MODULE_5__.assertAccountExists)(maybeAccount);\n  return maybeAccount;\n}\nasync function fetchMaybeToken(rpc, address, config) {\n  const maybeAccount = await (0,_solana_kit__WEBPACK_IMPORTED_MODULE_5__.fetchEncodedAccount)(rpc, address, config);\n  return decodeToken(maybeAccount);\n}\nasync function fetchAllToken(rpc, addresses, config) {\n  const maybeAccounts = await fetchAllMaybeToken(rpc, addresses, config);\n  (0,_solana_kit__WEBPACK_IMPORTED_MODULE_5__.assertAccountsExist)(maybeAccounts);\n  return maybeAccounts;\n}\nasync function fetchAllMaybeToken(rpc, addresses, config) {\n  const maybeAccounts = await (0,_solana_kit__WEBPACK_IMPORTED_MODULE_5__.fetchEncodedAccounts)(rpc, addresses, config);\n  return maybeAccounts.map((maybeAccount) => decodeToken(maybeAccount));\n}\nfunction getTokenSize() {\n  return 165;\n}\nvar ASSOCIATED_TOKEN_PROGRAM_ADDRESS = \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\";\nvar AssociatedTokenInstruction = /* @__PURE__ */ ((AssociatedTokenInstruction2) => {\n  AssociatedTokenInstruction2[AssociatedTokenInstruction2[\"CreateAssociatedToken\"] = 0] = \"CreateAssociatedToken\";\n  AssociatedTokenInstruction2[AssociatedTokenInstruction2[\"CreateAssociatedTokenIdempotent\"] = 1] = \"CreateAssociatedTokenIdempotent\";\n  AssociatedTokenInstruction2[AssociatedTokenInstruction2[\"RecoverNestedAssociatedToken\"] = 2] = \"RecoverNestedAssociatedToken\";\n  return AssociatedTokenInstruction2;\n})(AssociatedTokenInstruction || {});\nfunction identifyAssociatedTokenInstruction(instruction) {\n  const data = \"data\" in instruction ? instruction.data : instruction;\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(0), 0)) {\n    return 0 /* CreateAssociatedToken */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(1), 0)) {\n    return 1 /* CreateAssociatedTokenIdempotent */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(2), 0)) {\n    return 2 /* RecoverNestedAssociatedToken */;\n  }\n  throw new Error(\n    \"The provided instruction could not be identified as a associatedToken instruction.\"\n  );\n}\nvar TOKEN_PROGRAM_ADDRESS = \"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\";\nvar TokenAccount = /* @__PURE__ */ ((TokenAccount2) => {\n  TokenAccount2[TokenAccount2[\"Mint\"] = 0] = \"Mint\";\n  TokenAccount2[TokenAccount2[\"Token\"] = 1] = \"Token\";\n  TokenAccount2[TokenAccount2[\"Multisig\"] = 2] = \"Multisig\";\n  return TokenAccount2;\n})(TokenAccount || {});\nfunction identifyTokenAccount(account) {\n  const data = \"data\" in account ? account.data : account;\n  if (data.length === 82) {\n    return 0 /* Mint */;\n  }\n  if (data.length === 165) {\n    return 1 /* Token */;\n  }\n  if (data.length === 355) {\n    return 2 /* Multisig */;\n  }\n  throw new Error(\n    \"The provided account could not be identified as a token account.\"\n  );\n}\nvar TokenInstruction = /* @__PURE__ */ ((TokenInstruction2) => {\n  TokenInstruction2[TokenInstruction2[\"InitializeMint\"] = 0] = \"InitializeMint\";\n  TokenInstruction2[TokenInstruction2[\"InitializeAccount\"] = 1] = \"InitializeAccount\";\n  TokenInstruction2[TokenInstruction2[\"InitializeMultisig\"] = 2] = \"InitializeMultisig\";\n  TokenInstruction2[TokenInstruction2[\"Transfer\"] = 3] = \"Transfer\";\n  TokenInstruction2[TokenInstruction2[\"Approve\"] = 4] = \"Approve\";\n  TokenInstruction2[TokenInstruction2[\"Revoke\"] = 5] = \"Revoke\";\n  TokenInstruction2[TokenInstruction2[\"SetAuthority\"] = 6] = \"SetAuthority\";\n  TokenInstruction2[TokenInstruction2[\"MintTo\"] = 7] = \"MintTo\";\n  TokenInstruction2[TokenInstruction2[\"Burn\"] = 8] = \"Burn\";\n  TokenInstruction2[TokenInstruction2[\"CloseAccount\"] = 9] = \"CloseAccount\";\n  TokenInstruction2[TokenInstruction2[\"FreezeAccount\"] = 10] = \"FreezeAccount\";\n  TokenInstruction2[TokenInstruction2[\"ThawAccount\"] = 11] = \"ThawAccount\";\n  TokenInstruction2[TokenInstruction2[\"TransferChecked\"] = 12] = \"TransferChecked\";\n  TokenInstruction2[TokenInstruction2[\"ApproveChecked\"] = 13] = \"ApproveChecked\";\n  TokenInstruction2[TokenInstruction2[\"MintToChecked\"] = 14] = \"MintToChecked\";\n  TokenInstruction2[TokenInstruction2[\"BurnChecked\"] = 15] = \"BurnChecked\";\n  TokenInstruction2[TokenInstruction2[\"InitializeAccount2\"] = 16] = \"InitializeAccount2\";\n  TokenInstruction2[TokenInstruction2[\"SyncNative\"] = 17] = \"SyncNative\";\n  TokenInstruction2[TokenInstruction2[\"InitializeAccount3\"] = 18] = \"InitializeAccount3\";\n  TokenInstruction2[TokenInstruction2[\"InitializeMultisig2\"] = 19] = \"InitializeMultisig2\";\n  TokenInstruction2[TokenInstruction2[\"InitializeMint2\"] = 20] = \"InitializeMint2\";\n  TokenInstruction2[TokenInstruction2[\"GetAccountDataSize\"] = 21] = \"GetAccountDataSize\";\n  TokenInstruction2[TokenInstruction2[\"InitializeImmutableOwner\"] = 22] = \"InitializeImmutableOwner\";\n  TokenInstruction2[TokenInstruction2[\"AmountToUiAmount\"] = 23] = \"AmountToUiAmount\";\n  TokenInstruction2[TokenInstruction2[\"UiAmountToAmount\"] = 24] = \"UiAmountToAmount\";\n  return TokenInstruction2;\n})(TokenInstruction || {});\nfunction identifyTokenInstruction(instruction) {\n  const data = \"data\" in instruction ? instruction.data : instruction;\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(0), 0)) {\n    return 0 /* InitializeMint */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(1), 0)) {\n    return 1 /* InitializeAccount */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(2), 0)) {\n    return 2 /* InitializeMultisig */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(3), 0)) {\n    return 3 /* Transfer */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(4), 0)) {\n    return 4 /* Approve */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(5), 0)) {\n    return 5 /* Revoke */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(6), 0)) {\n    return 6 /* SetAuthority */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(7), 0)) {\n    return 7 /* MintTo */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(8), 0)) {\n    return 8 /* Burn */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(9), 0)) {\n    return 9 /* CloseAccount */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(10), 0)) {\n    return 10 /* FreezeAccount */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(11), 0)) {\n    return 11 /* ThawAccount */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(12), 0)) {\n    return 12 /* TransferChecked */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(13), 0)) {\n    return 13 /* ApproveChecked */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(14), 0)) {\n    return 14 /* MintToChecked */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(15), 0)) {\n    return 15 /* BurnChecked */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(16), 0)) {\n    return 16 /* InitializeAccount2 */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(17), 0)) {\n    return 17 /* SyncNative */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(18), 0)) {\n    return 18 /* InitializeAccount3 */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(19), 0)) {\n    return 19 /* InitializeMultisig2 */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(20), 0)) {\n    return 20 /* InitializeMint2 */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(21), 0)) {\n    return 21 /* GetAccountDataSize */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(22), 0)) {\n    return 22 /* InitializeImmutableOwner */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(23), 0)) {\n    return 23 /* AmountToUiAmount */;\n  }\n  if ((0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.containsBytes)(data, (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(24), 0)) {\n    return 24 /* UiAmountToAmount */;\n  }\n  throw new Error(\n    \"The provided instruction could not be identified as a token instruction.\"\n  );\n}\n\n// src/generated/errors/associatedToken.ts\nvar ASSOCIATED_TOKEN_ERROR__INVALID_OWNER = 0;\nvar associatedTokenErrorMessages;\nif (true) {\n  associatedTokenErrorMessages = {\n    [ASSOCIATED_TOKEN_ERROR__INVALID_OWNER]: `Associated token account owner does not match address derivation`\n  };\n}\nfunction getAssociatedTokenErrorMessage(code) {\n  if (true) {\n    return associatedTokenErrorMessages[code];\n  }\n  return \"Error message not available in production bundles.\";\n}\nfunction isAssociatedTokenError(error, transactionMessage, code) {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_6__.isProgramError)(\n    error,\n    transactionMessage,\n    ASSOCIATED_TOKEN_PROGRAM_ADDRESS,\n    code\n  );\n}\nvar TOKEN_ERROR__NOT_RENT_EXEMPT = 0;\nvar TOKEN_ERROR__INSUFFICIENT_FUNDS = 1;\nvar TOKEN_ERROR__INVALID_MINT = 2;\nvar TOKEN_ERROR__MINT_MISMATCH = 3;\nvar TOKEN_ERROR__OWNER_MISMATCH = 4;\nvar TOKEN_ERROR__FIXED_SUPPLY = 5;\nvar TOKEN_ERROR__ALREADY_IN_USE = 6;\nvar TOKEN_ERROR__INVALID_NUMBER_OF_PROVIDED_SIGNERS = 7;\nvar TOKEN_ERROR__INVALID_NUMBER_OF_REQUIRED_SIGNERS = 8;\nvar TOKEN_ERROR__UNINITIALIZED_STATE = 9;\nvar TOKEN_ERROR__NATIVE_NOT_SUPPORTED = 10;\nvar TOKEN_ERROR__NON_NATIVE_HAS_BALANCE = 11;\nvar TOKEN_ERROR__INVALID_INSTRUCTION = 12;\nvar TOKEN_ERROR__INVALID_STATE = 13;\nvar TOKEN_ERROR__OVERFLOW = 14;\nvar TOKEN_ERROR__AUTHORITY_TYPE_NOT_SUPPORTED = 15;\nvar TOKEN_ERROR__MINT_CANNOT_FREEZE = 16;\nvar TOKEN_ERROR__ACCOUNT_FROZEN = 17;\nvar TOKEN_ERROR__MINT_DECIMALS_MISMATCH = 18;\nvar TOKEN_ERROR__NON_NATIVE_NOT_SUPPORTED = 19;\nvar tokenErrorMessages;\nif (true) {\n  tokenErrorMessages = {\n    [TOKEN_ERROR__ACCOUNT_FROZEN]: `Account is frozen`,\n    [TOKEN_ERROR__ALREADY_IN_USE]: `Already in use`,\n    [TOKEN_ERROR__AUTHORITY_TYPE_NOT_SUPPORTED]: `Account does not support specified authority type`,\n    [TOKEN_ERROR__FIXED_SUPPLY]: `Fixed supply`,\n    [TOKEN_ERROR__INSUFFICIENT_FUNDS]: `Insufficient funds`,\n    [TOKEN_ERROR__INVALID_INSTRUCTION]: `Invalid instruction`,\n    [TOKEN_ERROR__INVALID_MINT]: `Invalid Mint`,\n    [TOKEN_ERROR__INVALID_NUMBER_OF_PROVIDED_SIGNERS]: `Invalid number of provided signers`,\n    [TOKEN_ERROR__INVALID_NUMBER_OF_REQUIRED_SIGNERS]: `Invalid number of required signers`,\n    [TOKEN_ERROR__INVALID_STATE]: `State is invalid for requested operation`,\n    [TOKEN_ERROR__MINT_CANNOT_FREEZE]: `This token mint cannot freeze accounts`,\n    [TOKEN_ERROR__MINT_DECIMALS_MISMATCH]: `The provided decimals value different from the Mint decimals`,\n    [TOKEN_ERROR__MINT_MISMATCH]: `Account not associated with this Mint`,\n    [TOKEN_ERROR__NATIVE_NOT_SUPPORTED]: `Instruction does not support native tokens`,\n    [TOKEN_ERROR__NON_NATIVE_HAS_BALANCE]: `Non-native account can only be closed if its balance is zero`,\n    [TOKEN_ERROR__NON_NATIVE_NOT_SUPPORTED]: `Instruction does not support non-native tokens`,\n    [TOKEN_ERROR__NOT_RENT_EXEMPT]: `Lamport balance below rent-exempt threshold`,\n    [TOKEN_ERROR__OVERFLOW]: `Operation overflowed`,\n    [TOKEN_ERROR__OWNER_MISMATCH]: `Owner does not match`,\n    [TOKEN_ERROR__UNINITIALIZED_STATE]: `State is unititialized`\n  };\n}\nfunction getTokenErrorMessage(code) {\n  if (true) {\n    return tokenErrorMessages[code];\n  }\n  return \"Error message not available in production bundles.\";\n}\nfunction isTokenError(error, transactionMessage, code) {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_6__.isProgramError)(\n    error,\n    transactionMessage,\n    TOKEN_PROGRAM_ADDRESS,\n    code\n  );\n}\nfunction expectAddress(value) {\n  if (!value) {\n    throw new Error(\"Expected a Address.\");\n  }\n  if (typeof value === \"object\" && \"address\" in value) {\n    return value.address;\n  }\n  if (Array.isArray(value)) {\n    return value[0];\n  }\n  return value;\n}\nfunction getAccountMetaFactory(programAddress, optionalAccountStrategy) {\n  return (account) => {\n    if (!account.value) {\n      return Object.freeze({\n        address: programAddress,\n        role: _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.READONLY\n      });\n    }\n    const writableRole = account.isWritable ? _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.WRITABLE : _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.READONLY;\n    return Object.freeze({\n      address: expectAddress(account.value),\n      role: isTransactionSigner(account.value) ? (0,_solana_kit__WEBPACK_IMPORTED_MODULE_7__.upgradeRoleToSigner)(writableRole) : writableRole,\n      ...isTransactionSigner(account.value) ? { signer: account.value } : {}\n    });\n  };\n}\nfunction isTransactionSigner(value) {\n  return !!value && typeof value === \"object\" && \"address\" in value && (0,_solana_kit__WEBPACK_IMPORTED_MODULE_8__.isTransactionSigner)(value);\n}\n\n// src/generated/instructions/amountToUiAmount.ts\nvar AMOUNT_TO_UI_AMOUNT_DISCRIMINATOR = 23;\nfunction getAmountToUiAmountDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(AMOUNT_TO_UI_AMOUNT_DISCRIMINATOR);\n}\nfunction getAmountToUiAmountInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Encoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: AMOUNT_TO_UI_AMOUNT_DISCRIMINATOR })\n  );\n}\nfunction getAmountToUiAmountInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Decoder)()]\n  ]);\n}\nfunction getAmountToUiAmountInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getAmountToUiAmountInstructionDataEncoder(),\n    getAmountToUiAmountInstructionDataDecoder()\n  );\n}\nfunction getAmountToUiAmountInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    mint: { value: input.mint ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [getAccountMeta(accounts.mint)],\n    programAddress,\n    data: getAmountToUiAmountInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseAmountToUiAmountInstruction(instruction) {\n  if (instruction.accounts.length < 1) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      mint: getNextAccount()\n    },\n    data: getAmountToUiAmountInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar APPROVE_DISCRIMINATOR = 4;\nfunction getApproveDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(APPROVE_DISCRIMINATOR);\n}\nfunction getApproveInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Encoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: APPROVE_DISCRIMINATOR })\n  );\n}\nfunction getApproveInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Decoder)()]\n  ]);\n}\nfunction getApproveInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getApproveInstructionDataEncoder(),\n    getApproveInstructionDataDecoder()\n  );\n}\nfunction getApproveInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    source: { value: input.source ?? null, isWritable: true },\n    delegate: { value: input.delegate ?? null, isWritable: false },\n    owner: { value: input.owner ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const remainingAccounts = (args.multiSigners ?? []).map(\n    (signer) => ({\n      address: signer.address,\n      role: _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.READONLY_SIGNER,\n      signer\n    })\n  );\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.source),\n      getAccountMeta(accounts.delegate),\n      getAccountMeta(accounts.owner),\n      ...remainingAccounts\n    ],\n    programAddress,\n    data: getApproveInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseApproveInstruction(instruction) {\n  if (instruction.accounts.length < 3) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      source: getNextAccount(),\n      delegate: getNextAccount(),\n      owner: getNextAccount()\n    },\n    data: getApproveInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar APPROVE_CHECKED_DISCRIMINATOR = 13;\nfunction getApproveCheckedDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(APPROVE_CHECKED_DISCRIMINATOR);\n}\nfunction getApproveCheckedInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Encoder)()],\n      [\"decimals\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: APPROVE_CHECKED_DISCRIMINATOR })\n  );\n}\nfunction getApproveCheckedInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Decoder)()],\n    [\"decimals\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()]\n  ]);\n}\nfunction getApproveCheckedInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getApproveCheckedInstructionDataEncoder(),\n    getApproveCheckedInstructionDataDecoder()\n  );\n}\nfunction getApproveCheckedInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    source: { value: input.source ?? null, isWritable: true },\n    mint: { value: input.mint ?? null, isWritable: false },\n    delegate: { value: input.delegate ?? null, isWritable: false },\n    owner: { value: input.owner ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const remainingAccounts = (args.multiSigners ?? []).map(\n    (signer) => ({\n      address: signer.address,\n      role: _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.READONLY_SIGNER,\n      signer\n    })\n  );\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.source),\n      getAccountMeta(accounts.mint),\n      getAccountMeta(accounts.delegate),\n      getAccountMeta(accounts.owner),\n      ...remainingAccounts\n    ],\n    programAddress,\n    data: getApproveCheckedInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseApproveCheckedInstruction(instruction) {\n  if (instruction.accounts.length < 4) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      source: getNextAccount(),\n      mint: getNextAccount(),\n      delegate: getNextAccount(),\n      owner: getNextAccount()\n    },\n    data: getApproveCheckedInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar BURN_DISCRIMINATOR = 8;\nfunction getBurnDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(BURN_DISCRIMINATOR);\n}\nfunction getBurnInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Encoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: BURN_DISCRIMINATOR })\n  );\n}\nfunction getBurnInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Decoder)()]\n  ]);\n}\nfunction getBurnInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getBurnInstructionDataEncoder(),\n    getBurnInstructionDataDecoder()\n  );\n}\nfunction getBurnInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    account: { value: input.account ?? null, isWritable: true },\n    mint: { value: input.mint ?? null, isWritable: true },\n    authority: { value: input.authority ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const remainingAccounts = (args.multiSigners ?? []).map(\n    (signer) => ({\n      address: signer.address,\n      role: _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.READONLY_SIGNER,\n      signer\n    })\n  );\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.account),\n      getAccountMeta(accounts.mint),\n      getAccountMeta(accounts.authority),\n      ...remainingAccounts\n    ],\n    programAddress,\n    data: getBurnInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseBurnInstruction(instruction) {\n  if (instruction.accounts.length < 3) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      account: getNextAccount(),\n      mint: getNextAccount(),\n      authority: getNextAccount()\n    },\n    data: getBurnInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar BURN_CHECKED_DISCRIMINATOR = 15;\nfunction getBurnCheckedDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(BURN_CHECKED_DISCRIMINATOR);\n}\nfunction getBurnCheckedInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Encoder)()],\n      [\"decimals\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: BURN_CHECKED_DISCRIMINATOR })\n  );\n}\nfunction getBurnCheckedInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Decoder)()],\n    [\"decimals\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()]\n  ]);\n}\nfunction getBurnCheckedInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getBurnCheckedInstructionDataEncoder(),\n    getBurnCheckedInstructionDataDecoder()\n  );\n}\nfunction getBurnCheckedInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    account: { value: input.account ?? null, isWritable: true },\n    mint: { value: input.mint ?? null, isWritable: true },\n    authority: { value: input.authority ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const remainingAccounts = (args.multiSigners ?? []).map(\n    (signer) => ({\n      address: signer.address,\n      role: _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.READONLY_SIGNER,\n      signer\n    })\n  );\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.account),\n      getAccountMeta(accounts.mint),\n      getAccountMeta(accounts.authority),\n      ...remainingAccounts\n    ],\n    programAddress,\n    data: getBurnCheckedInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseBurnCheckedInstruction(instruction) {\n  if (instruction.accounts.length < 3) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      account: getNextAccount(),\n      mint: getNextAccount(),\n      authority: getNextAccount()\n    },\n    data: getBurnCheckedInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar CLOSE_ACCOUNT_DISCRIMINATOR = 9;\nfunction getCloseAccountDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(CLOSE_ACCOUNT_DISCRIMINATOR);\n}\nfunction getCloseAccountInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()]]),\n    (value) => ({ ...value, discriminator: CLOSE_ACCOUNT_DISCRIMINATOR })\n  );\n}\nfunction getCloseAccountInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()]]);\n}\nfunction getCloseAccountInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getCloseAccountInstructionDataEncoder(),\n    getCloseAccountInstructionDataDecoder()\n  );\n}\nfunction getCloseAccountInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    account: { value: input.account ?? null, isWritable: true },\n    destination: { value: input.destination ?? null, isWritable: true },\n    owner: { value: input.owner ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const remainingAccounts = (args.multiSigners ?? []).map(\n    (signer) => ({\n      address: signer.address,\n      role: _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.READONLY_SIGNER,\n      signer\n    })\n  );\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.account),\n      getAccountMeta(accounts.destination),\n      getAccountMeta(accounts.owner),\n      ...remainingAccounts\n    ],\n    programAddress,\n    data: getCloseAccountInstructionDataEncoder().encode({})\n  };\n  return instruction;\n}\nfunction parseCloseAccountInstruction(instruction) {\n  if (instruction.accounts.length < 3) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      account: getNextAccount(),\n      destination: getNextAccount(),\n      owner: getNextAccount()\n    },\n    data: getCloseAccountInstructionDataDecoder().decode(instruction.data)\n  };\n}\nasync function findAssociatedTokenPda(seeds, config = {}) {\n  const {\n    programAddress = \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"\n  } = config;\n  return await (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getProgramDerivedAddress)({\n    programAddress,\n    seeds: [\n      (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressEncoder)().encode(seeds.owner),\n      (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressEncoder)().encode(seeds.tokenProgram),\n      (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressEncoder)().encode(seeds.mint)\n    ]\n  });\n}\n\n// src/generated/instructions/createAssociatedToken.ts\nvar CREATE_ASSOCIATED_TOKEN_DISCRIMINATOR = 0;\nfunction getCreateAssociatedTokenDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(CREATE_ASSOCIATED_TOKEN_DISCRIMINATOR);\n}\nfunction getCreateAssociatedTokenInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()]]),\n    (value) => ({\n      ...value,\n      discriminator: CREATE_ASSOCIATED_TOKEN_DISCRIMINATOR\n    })\n  );\n}\nfunction getCreateAssociatedTokenInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()]]);\n}\nfunction getCreateAssociatedTokenInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getCreateAssociatedTokenInstructionDataEncoder(),\n    getCreateAssociatedTokenInstructionDataDecoder()\n  );\n}\nasync function getCreateAssociatedTokenInstructionAsync(input, config) {\n  const programAddress = config?.programAddress ?? ASSOCIATED_TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    payer: { value: input.payer ?? null, isWritable: true },\n    ata: { value: input.ata ?? null, isWritable: true },\n    owner: { value: input.owner ?? null, isWritable: false },\n    mint: { value: input.mint ?? null, isWritable: false },\n    systemProgram: { value: input.systemProgram ?? null, isWritable: false },\n    tokenProgram: { value: input.tokenProgram ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  if (!accounts.tokenProgram.value) {\n    accounts.tokenProgram.value = \"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\";\n  }\n  if (!accounts.ata.value) {\n    accounts.ata.value = await findAssociatedTokenPda({\n      owner: expectAddress(accounts.owner.value),\n      tokenProgram: expectAddress(accounts.tokenProgram.value),\n      mint: expectAddress(accounts.mint.value)\n    });\n  }\n  if (!accounts.systemProgram.value) {\n    accounts.systemProgram.value = \"11111111111111111111111111111111\";\n  }\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.payer),\n      getAccountMeta(accounts.ata),\n      getAccountMeta(accounts.owner),\n      getAccountMeta(accounts.mint),\n      getAccountMeta(accounts.systemProgram),\n      getAccountMeta(accounts.tokenProgram)\n    ],\n    programAddress,\n    data: getCreateAssociatedTokenInstructionDataEncoder().encode({})\n  };\n  return instruction;\n}\nfunction getCreateAssociatedTokenInstruction(input, config) {\n  const programAddress = config?.programAddress ?? ASSOCIATED_TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    payer: { value: input.payer ?? null, isWritable: true },\n    ata: { value: input.ata ?? null, isWritable: true },\n    owner: { value: input.owner ?? null, isWritable: false },\n    mint: { value: input.mint ?? null, isWritable: false },\n    systemProgram: { value: input.systemProgram ?? null, isWritable: false },\n    tokenProgram: { value: input.tokenProgram ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  if (!accounts.tokenProgram.value) {\n    accounts.tokenProgram.value = \"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\";\n  }\n  if (!accounts.systemProgram.value) {\n    accounts.systemProgram.value = \"11111111111111111111111111111111\";\n  }\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.payer),\n      getAccountMeta(accounts.ata),\n      getAccountMeta(accounts.owner),\n      getAccountMeta(accounts.mint),\n      getAccountMeta(accounts.systemProgram),\n      getAccountMeta(accounts.tokenProgram)\n    ],\n    programAddress,\n    data: getCreateAssociatedTokenInstructionDataEncoder().encode({})\n  };\n  return instruction;\n}\nfunction parseCreateAssociatedTokenInstruction(instruction) {\n  if (instruction.accounts.length < 6) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      payer: getNextAccount(),\n      ata: getNextAccount(),\n      owner: getNextAccount(),\n      mint: getNextAccount(),\n      systemProgram: getNextAccount(),\n      tokenProgram: getNextAccount()\n    },\n    data: getCreateAssociatedTokenInstructionDataDecoder().decode(\n      instruction.data\n    )\n  };\n}\nvar CREATE_ASSOCIATED_TOKEN_IDEMPOTENT_DISCRIMINATOR = 1;\nfunction getCreateAssociatedTokenIdempotentDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(\n    CREATE_ASSOCIATED_TOKEN_IDEMPOTENT_DISCRIMINATOR\n  );\n}\nfunction getCreateAssociatedTokenIdempotentInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()]]),\n    (value) => ({\n      ...value,\n      discriminator: CREATE_ASSOCIATED_TOKEN_IDEMPOTENT_DISCRIMINATOR\n    })\n  );\n}\nfunction getCreateAssociatedTokenIdempotentInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()]]);\n}\nfunction getCreateAssociatedTokenIdempotentInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getCreateAssociatedTokenIdempotentInstructionDataEncoder(),\n    getCreateAssociatedTokenIdempotentInstructionDataDecoder()\n  );\n}\nasync function getCreateAssociatedTokenIdempotentInstructionAsync(input, config) {\n  const programAddress = config?.programAddress ?? ASSOCIATED_TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    payer: { value: input.payer ?? null, isWritable: true },\n    ata: { value: input.ata ?? null, isWritable: true },\n    owner: { value: input.owner ?? null, isWritable: false },\n    mint: { value: input.mint ?? null, isWritable: false },\n    systemProgram: { value: input.systemProgram ?? null, isWritable: false },\n    tokenProgram: { value: input.tokenProgram ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  if (!accounts.tokenProgram.value) {\n    accounts.tokenProgram.value = \"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\";\n  }\n  if (!accounts.ata.value) {\n    accounts.ata.value = await findAssociatedTokenPda({\n      owner: expectAddress(accounts.owner.value),\n      tokenProgram: expectAddress(accounts.tokenProgram.value),\n      mint: expectAddress(accounts.mint.value)\n    });\n  }\n  if (!accounts.systemProgram.value) {\n    accounts.systemProgram.value = \"11111111111111111111111111111111\";\n  }\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.payer),\n      getAccountMeta(accounts.ata),\n      getAccountMeta(accounts.owner),\n      getAccountMeta(accounts.mint),\n      getAccountMeta(accounts.systemProgram),\n      getAccountMeta(accounts.tokenProgram)\n    ],\n    programAddress,\n    data: getCreateAssociatedTokenIdempotentInstructionDataEncoder().encode({})\n  };\n  return instruction;\n}\nfunction getCreateAssociatedTokenIdempotentInstruction(input, config) {\n  const programAddress = config?.programAddress ?? ASSOCIATED_TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    payer: { value: input.payer ?? null, isWritable: true },\n    ata: { value: input.ata ?? null, isWritable: true },\n    owner: { value: input.owner ?? null, isWritable: false },\n    mint: { value: input.mint ?? null, isWritable: false },\n    systemProgram: { value: input.systemProgram ?? null, isWritable: false },\n    tokenProgram: { value: input.tokenProgram ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  if (!accounts.tokenProgram.value) {\n    accounts.tokenProgram.value = \"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\";\n  }\n  if (!accounts.systemProgram.value) {\n    accounts.systemProgram.value = \"11111111111111111111111111111111\";\n  }\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.payer),\n      getAccountMeta(accounts.ata),\n      getAccountMeta(accounts.owner),\n      getAccountMeta(accounts.mint),\n      getAccountMeta(accounts.systemProgram),\n      getAccountMeta(accounts.tokenProgram)\n    ],\n    programAddress,\n    data: getCreateAssociatedTokenIdempotentInstructionDataEncoder().encode({})\n  };\n  return instruction;\n}\nfunction parseCreateAssociatedTokenIdempotentInstruction(instruction) {\n  if (instruction.accounts.length < 6) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      payer: getNextAccount(),\n      ata: getNextAccount(),\n      owner: getNextAccount(),\n      mint: getNextAccount(),\n      systemProgram: getNextAccount(),\n      tokenProgram: getNextAccount()\n    },\n    data: getCreateAssociatedTokenIdempotentInstructionDataDecoder().decode(\n      instruction.data\n    )\n  };\n}\nvar FREEZE_ACCOUNT_DISCRIMINATOR = 10;\nfunction getFreezeAccountDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(FREEZE_ACCOUNT_DISCRIMINATOR);\n}\nfunction getFreezeAccountInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()]]),\n    (value) => ({ ...value, discriminator: FREEZE_ACCOUNT_DISCRIMINATOR })\n  );\n}\nfunction getFreezeAccountInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()]]);\n}\nfunction getFreezeAccountInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getFreezeAccountInstructionDataEncoder(),\n    getFreezeAccountInstructionDataDecoder()\n  );\n}\nfunction getFreezeAccountInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    account: { value: input.account ?? null, isWritable: true },\n    mint: { value: input.mint ?? null, isWritable: false },\n    owner: { value: input.owner ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const remainingAccounts = (args.multiSigners ?? []).map(\n    (signer) => ({\n      address: signer.address,\n      role: _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.READONLY_SIGNER,\n      signer\n    })\n  );\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.account),\n      getAccountMeta(accounts.mint),\n      getAccountMeta(accounts.owner),\n      ...remainingAccounts\n    ],\n    programAddress,\n    data: getFreezeAccountInstructionDataEncoder().encode({})\n  };\n  return instruction;\n}\nfunction parseFreezeAccountInstruction(instruction) {\n  if (instruction.accounts.length < 3) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      account: getNextAccount(),\n      mint: getNextAccount(),\n      owner: getNextAccount()\n    },\n    data: getFreezeAccountInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar GET_ACCOUNT_DATA_SIZE_DISCRIMINATOR = 21;\nfunction getGetAccountDataSizeDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(GET_ACCOUNT_DATA_SIZE_DISCRIMINATOR);\n}\nfunction getGetAccountDataSizeInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()]]),\n    (value) => ({\n      ...value,\n      discriminator: GET_ACCOUNT_DATA_SIZE_DISCRIMINATOR\n    })\n  );\n}\nfunction getGetAccountDataSizeInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()]]);\n}\nfunction getGetAccountDataSizeInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getGetAccountDataSizeInstructionDataEncoder(),\n    getGetAccountDataSizeInstructionDataDecoder()\n  );\n}\nfunction getGetAccountDataSizeInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    mint: { value: input.mint ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [getAccountMeta(accounts.mint)],\n    programAddress,\n    data: getGetAccountDataSizeInstructionDataEncoder().encode({})\n  };\n  return instruction;\n}\nfunction parseGetAccountDataSizeInstruction(instruction) {\n  if (instruction.accounts.length < 1) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      mint: getNextAccount()\n    },\n    data: getGetAccountDataSizeInstructionDataDecoder().decode(\n      instruction.data\n    )\n  };\n}\nvar INITIALIZE_ACCOUNT_DISCRIMINATOR = 1;\nfunction getInitializeAccountDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(INITIALIZE_ACCOUNT_DISCRIMINATOR);\n}\nfunction getInitializeAccountInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()]]),\n    (value) => ({ ...value, discriminator: INITIALIZE_ACCOUNT_DISCRIMINATOR })\n  );\n}\nfunction getInitializeAccountInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()]]);\n}\nfunction getInitializeAccountInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getInitializeAccountInstructionDataEncoder(),\n    getInitializeAccountInstructionDataDecoder()\n  );\n}\nfunction getInitializeAccountInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    account: { value: input.account ?? null, isWritable: true },\n    mint: { value: input.mint ?? null, isWritable: false },\n    owner: { value: input.owner ?? null, isWritable: false },\n    rent: { value: input.rent ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  if (!accounts.rent.value) {\n    accounts.rent.value = \"SysvarRent111111111111111111111111111111111\";\n  }\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.account),\n      getAccountMeta(accounts.mint),\n      getAccountMeta(accounts.owner),\n      getAccountMeta(accounts.rent)\n    ],\n    programAddress,\n    data: getInitializeAccountInstructionDataEncoder().encode({})\n  };\n  return instruction;\n}\nfunction parseInitializeAccountInstruction(instruction) {\n  if (instruction.accounts.length < 4) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      account: getNextAccount(),\n      mint: getNextAccount(),\n      owner: getNextAccount(),\n      rent: getNextAccount()\n    },\n    data: getInitializeAccountInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar INITIALIZE_ACCOUNT2_DISCRIMINATOR = 16;\nfunction getInitializeAccount2DiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(INITIALIZE_ACCOUNT2_DISCRIMINATOR);\n}\nfunction getInitializeAccount2InstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"owner\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressEncoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: INITIALIZE_ACCOUNT2_DISCRIMINATOR })\n  );\n}\nfunction getInitializeAccount2InstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"owner\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressDecoder)()]\n  ]);\n}\nfunction getInitializeAccount2InstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getInitializeAccount2InstructionDataEncoder(),\n    getInitializeAccount2InstructionDataDecoder()\n  );\n}\nfunction getInitializeAccount2Instruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    account: { value: input.account ?? null, isWritable: true },\n    mint: { value: input.mint ?? null, isWritable: false },\n    rent: { value: input.rent ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  if (!accounts.rent.value) {\n    accounts.rent.value = \"SysvarRent111111111111111111111111111111111\";\n  }\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.account),\n      getAccountMeta(accounts.mint),\n      getAccountMeta(accounts.rent)\n    ],\n    programAddress,\n    data: getInitializeAccount2InstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseInitializeAccount2Instruction(instruction) {\n  if (instruction.accounts.length < 3) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      account: getNextAccount(),\n      mint: getNextAccount(),\n      rent: getNextAccount()\n    },\n    data: getInitializeAccount2InstructionDataDecoder().decode(\n      instruction.data\n    )\n  };\n}\nvar INITIALIZE_ACCOUNT3_DISCRIMINATOR = 18;\nfunction getInitializeAccount3DiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(INITIALIZE_ACCOUNT3_DISCRIMINATOR);\n}\nfunction getInitializeAccount3InstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"owner\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressEncoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: INITIALIZE_ACCOUNT3_DISCRIMINATOR })\n  );\n}\nfunction getInitializeAccount3InstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"owner\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressDecoder)()]\n  ]);\n}\nfunction getInitializeAccount3InstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getInitializeAccount3InstructionDataEncoder(),\n    getInitializeAccount3InstructionDataDecoder()\n  );\n}\nfunction getInitializeAccount3Instruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    account: { value: input.account ?? null, isWritable: true },\n    mint: { value: input.mint ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [getAccountMeta(accounts.account), getAccountMeta(accounts.mint)],\n    programAddress,\n    data: getInitializeAccount3InstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseInitializeAccount3Instruction(instruction) {\n  if (instruction.accounts.length < 2) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      account: getNextAccount(),\n      mint: getNextAccount()\n    },\n    data: getInitializeAccount3InstructionDataDecoder().decode(\n      instruction.data\n    )\n  };\n}\nvar INITIALIZE_IMMUTABLE_OWNER_DISCRIMINATOR = 22;\nfunction getInitializeImmutableOwnerDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(INITIALIZE_IMMUTABLE_OWNER_DISCRIMINATOR);\n}\nfunction getInitializeImmutableOwnerInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()]]),\n    (value) => ({\n      ...value,\n      discriminator: INITIALIZE_IMMUTABLE_OWNER_DISCRIMINATOR\n    })\n  );\n}\nfunction getInitializeImmutableOwnerInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()]]);\n}\nfunction getInitializeImmutableOwnerInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getInitializeImmutableOwnerInstructionDataEncoder(),\n    getInitializeImmutableOwnerInstructionDataDecoder()\n  );\n}\nfunction getInitializeImmutableOwnerInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    account: { value: input.account ?? null, isWritable: true }\n  };\n  const accounts = originalAccounts;\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [getAccountMeta(accounts.account)],\n    programAddress,\n    data: getInitializeImmutableOwnerInstructionDataEncoder().encode({})\n  };\n  return instruction;\n}\nfunction parseInitializeImmutableOwnerInstruction(instruction) {\n  if (instruction.accounts.length < 1) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      account: getNextAccount()\n    },\n    data: getInitializeImmutableOwnerInstructionDataDecoder().decode(\n      instruction.data\n    )\n  };\n}\nvar INITIALIZE_MINT_DISCRIMINATOR = 0;\nfunction getInitializeMintDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(INITIALIZE_MINT_DISCRIMINATOR);\n}\nfunction getInitializeMintInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"decimals\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"mintAuthority\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressEncoder)()],\n      [\"freezeAuthority\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getOptionEncoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressEncoder)())]\n    ]),\n    (value) => ({\n      ...value,\n      discriminator: INITIALIZE_MINT_DISCRIMINATOR,\n      freezeAuthority: value.freezeAuthority ?? (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.none)()\n    })\n  );\n}\nfunction getInitializeMintInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"decimals\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"mintAuthority\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressDecoder)()],\n    [\"freezeAuthority\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getOptionDecoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressDecoder)())]\n  ]);\n}\nfunction getInitializeMintInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getInitializeMintInstructionDataEncoder(),\n    getInitializeMintInstructionDataDecoder()\n  );\n}\nfunction getInitializeMintInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    mint: { value: input.mint ?? null, isWritable: true },\n    rent: { value: input.rent ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  if (!accounts.rent.value) {\n    accounts.rent.value = \"SysvarRent111111111111111111111111111111111\";\n  }\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [getAccountMeta(accounts.mint), getAccountMeta(accounts.rent)],\n    programAddress,\n    data: getInitializeMintInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseInitializeMintInstruction(instruction) {\n  if (instruction.accounts.length < 2) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      mint: getNextAccount(),\n      rent: getNextAccount()\n    },\n    data: getInitializeMintInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar INITIALIZE_MINT2_DISCRIMINATOR = 20;\nfunction getInitializeMint2DiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(INITIALIZE_MINT2_DISCRIMINATOR);\n}\nfunction getInitializeMint2InstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"decimals\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"mintAuthority\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressEncoder)()],\n      [\"freezeAuthority\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getOptionEncoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressEncoder)())]\n    ]),\n    (value) => ({\n      ...value,\n      discriminator: INITIALIZE_MINT2_DISCRIMINATOR,\n      freezeAuthority: value.freezeAuthority ?? (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.none)()\n    })\n  );\n}\nfunction getInitializeMint2InstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"decimals\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"mintAuthority\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressDecoder)()],\n    [\"freezeAuthority\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getOptionDecoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressDecoder)())]\n  ]);\n}\nfunction getInitializeMint2InstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getInitializeMint2InstructionDataEncoder(),\n    getInitializeMint2InstructionDataDecoder()\n  );\n}\nfunction getInitializeMint2Instruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    mint: { value: input.mint ?? null, isWritable: true }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [getAccountMeta(accounts.mint)],\n    programAddress,\n    data: getInitializeMint2InstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseInitializeMint2Instruction(instruction) {\n  if (instruction.accounts.length < 1) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      mint: getNextAccount()\n    },\n    data: getInitializeMint2InstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar INITIALIZE_MULTISIG_DISCRIMINATOR = 2;\nfunction getInitializeMultisigDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(INITIALIZE_MULTISIG_DISCRIMINATOR);\n}\nfunction getInitializeMultisigInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"m\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: INITIALIZE_MULTISIG_DISCRIMINATOR })\n  );\n}\nfunction getInitializeMultisigInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"m\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()]\n  ]);\n}\nfunction getInitializeMultisigInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getInitializeMultisigInstructionDataEncoder(),\n    getInitializeMultisigInstructionDataDecoder()\n  );\n}\nfunction getInitializeMultisigInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    multisig: { value: input.multisig ?? null, isWritable: true },\n    rent: { value: input.rent ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  if (!accounts.rent.value) {\n    accounts.rent.value = \"SysvarRent111111111111111111111111111111111\";\n  }\n  const remainingAccounts = args.signers.map((address) => ({\n    address,\n    role: _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.READONLY\n  }));\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.multisig),\n      getAccountMeta(accounts.rent),\n      ...remainingAccounts\n    ],\n    programAddress,\n    data: getInitializeMultisigInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseInitializeMultisigInstruction(instruction) {\n  if (instruction.accounts.length < 2) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      multisig: getNextAccount(),\n      rent: getNextAccount()\n    },\n    data: getInitializeMultisigInstructionDataDecoder().decode(\n      instruction.data\n    )\n  };\n}\nvar INITIALIZE_MULTISIG2_DISCRIMINATOR = 19;\nfunction getInitializeMultisig2DiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(INITIALIZE_MULTISIG2_DISCRIMINATOR);\n}\nfunction getInitializeMultisig2InstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"m\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: INITIALIZE_MULTISIG2_DISCRIMINATOR })\n  );\n}\nfunction getInitializeMultisig2InstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"m\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()]\n  ]);\n}\nfunction getInitializeMultisig2InstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getInitializeMultisig2InstructionDataEncoder(),\n    getInitializeMultisig2InstructionDataDecoder()\n  );\n}\nfunction getInitializeMultisig2Instruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    multisig: { value: input.multisig ?? null, isWritable: true }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const remainingAccounts = args.signers.map((address) => ({\n    address,\n    role: _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.READONLY\n  }));\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [getAccountMeta(accounts.multisig), ...remainingAccounts],\n    programAddress,\n    data: getInitializeMultisig2InstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseInitializeMultisig2Instruction(instruction) {\n  if (instruction.accounts.length < 1) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      multisig: getNextAccount()\n    },\n    data: getInitializeMultisig2InstructionDataDecoder().decode(\n      instruction.data\n    )\n  };\n}\nvar MINT_TO_DISCRIMINATOR = 7;\nfunction getMintToDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(MINT_TO_DISCRIMINATOR);\n}\nfunction getMintToInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Encoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: MINT_TO_DISCRIMINATOR })\n  );\n}\nfunction getMintToInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Decoder)()]\n  ]);\n}\nfunction getMintToInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getMintToInstructionDataEncoder(),\n    getMintToInstructionDataDecoder()\n  );\n}\nfunction getMintToInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    mint: { value: input.mint ?? null, isWritable: true },\n    token: { value: input.token ?? null, isWritable: true },\n    mintAuthority: { value: input.mintAuthority ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const remainingAccounts = (args.multiSigners ?? []).map(\n    (signer) => ({\n      address: signer.address,\n      role: _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.READONLY_SIGNER,\n      signer\n    })\n  );\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.mint),\n      getAccountMeta(accounts.token),\n      getAccountMeta(accounts.mintAuthority),\n      ...remainingAccounts\n    ],\n    programAddress,\n    data: getMintToInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseMintToInstruction(instruction) {\n  if (instruction.accounts.length < 3) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      mint: getNextAccount(),\n      token: getNextAccount(),\n      mintAuthority: getNextAccount()\n    },\n    data: getMintToInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar MINT_TO_CHECKED_DISCRIMINATOR = 14;\nfunction getMintToCheckedDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(MINT_TO_CHECKED_DISCRIMINATOR);\n}\nfunction getMintToCheckedInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Encoder)()],\n      [\"decimals\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: MINT_TO_CHECKED_DISCRIMINATOR })\n  );\n}\nfunction getMintToCheckedInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Decoder)()],\n    [\"decimals\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()]\n  ]);\n}\nfunction getMintToCheckedInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getMintToCheckedInstructionDataEncoder(),\n    getMintToCheckedInstructionDataDecoder()\n  );\n}\nfunction getMintToCheckedInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    mint: { value: input.mint ?? null, isWritable: true },\n    token: { value: input.token ?? null, isWritable: true },\n    mintAuthority: { value: input.mintAuthority ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const remainingAccounts = (args.multiSigners ?? []).map(\n    (signer) => ({\n      address: signer.address,\n      role: _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.READONLY_SIGNER,\n      signer\n    })\n  );\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.mint),\n      getAccountMeta(accounts.token),\n      getAccountMeta(accounts.mintAuthority),\n      ...remainingAccounts\n    ],\n    programAddress,\n    data: getMintToCheckedInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseMintToCheckedInstruction(instruction) {\n  if (instruction.accounts.length < 3) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      mint: getNextAccount(),\n      token: getNextAccount(),\n      mintAuthority: getNextAccount()\n    },\n    data: getMintToCheckedInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar RECOVER_NESTED_ASSOCIATED_TOKEN_DISCRIMINATOR = 2;\nfunction getRecoverNestedAssociatedTokenDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(RECOVER_NESTED_ASSOCIATED_TOKEN_DISCRIMINATOR);\n}\nfunction getRecoverNestedAssociatedTokenInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()]]),\n    (value) => ({\n      ...value,\n      discriminator: RECOVER_NESTED_ASSOCIATED_TOKEN_DISCRIMINATOR\n    })\n  );\n}\nfunction getRecoverNestedAssociatedTokenInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()]]);\n}\nfunction getRecoverNestedAssociatedTokenInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getRecoverNestedAssociatedTokenInstructionDataEncoder(),\n    getRecoverNestedAssociatedTokenInstructionDataDecoder()\n  );\n}\nasync function getRecoverNestedAssociatedTokenInstructionAsync(input, config) {\n  const programAddress = config?.programAddress ?? ASSOCIATED_TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    nestedAssociatedAccountAddress: {\n      value: input.nestedAssociatedAccountAddress ?? null,\n      isWritable: true\n    },\n    nestedTokenMintAddress: {\n      value: input.nestedTokenMintAddress ?? null,\n      isWritable: false\n    },\n    destinationAssociatedAccountAddress: {\n      value: input.destinationAssociatedAccountAddress ?? null,\n      isWritable: true\n    },\n    ownerAssociatedAccountAddress: {\n      value: input.ownerAssociatedAccountAddress ?? null,\n      isWritable: false\n    },\n    ownerTokenMintAddress: {\n      value: input.ownerTokenMintAddress ?? null,\n      isWritable: false\n    },\n    walletAddress: { value: input.walletAddress ?? null, isWritable: true },\n    tokenProgram: { value: input.tokenProgram ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  if (!accounts.tokenProgram.value) {\n    accounts.tokenProgram.value = \"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\";\n  }\n  if (!accounts.ownerAssociatedAccountAddress.value) {\n    accounts.ownerAssociatedAccountAddress.value = await findAssociatedTokenPda(\n      {\n        owner: expectAddress(accounts.walletAddress.value),\n        tokenProgram: expectAddress(accounts.tokenProgram.value),\n        mint: expectAddress(accounts.ownerTokenMintAddress.value)\n      }\n    );\n  }\n  if (!accounts.nestedAssociatedAccountAddress.value) {\n    accounts.nestedAssociatedAccountAddress.value = await findAssociatedTokenPda({\n      owner: expectAddress(accounts.ownerAssociatedAccountAddress.value),\n      tokenProgram: expectAddress(accounts.tokenProgram.value),\n      mint: expectAddress(accounts.nestedTokenMintAddress.value)\n    });\n  }\n  if (!accounts.destinationAssociatedAccountAddress.value) {\n    accounts.destinationAssociatedAccountAddress.value = await findAssociatedTokenPda({\n      owner: expectAddress(accounts.walletAddress.value),\n      tokenProgram: expectAddress(accounts.tokenProgram.value),\n      mint: expectAddress(accounts.nestedTokenMintAddress.value)\n    });\n  }\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.nestedAssociatedAccountAddress),\n      getAccountMeta(accounts.nestedTokenMintAddress),\n      getAccountMeta(accounts.destinationAssociatedAccountAddress),\n      getAccountMeta(accounts.ownerAssociatedAccountAddress),\n      getAccountMeta(accounts.ownerTokenMintAddress),\n      getAccountMeta(accounts.walletAddress),\n      getAccountMeta(accounts.tokenProgram)\n    ],\n    programAddress,\n    data: getRecoverNestedAssociatedTokenInstructionDataEncoder().encode({})\n  };\n  return instruction;\n}\nfunction getRecoverNestedAssociatedTokenInstruction(input, config) {\n  const programAddress = config?.programAddress ?? ASSOCIATED_TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    nestedAssociatedAccountAddress: {\n      value: input.nestedAssociatedAccountAddress ?? null,\n      isWritable: true\n    },\n    nestedTokenMintAddress: {\n      value: input.nestedTokenMintAddress ?? null,\n      isWritable: false\n    },\n    destinationAssociatedAccountAddress: {\n      value: input.destinationAssociatedAccountAddress ?? null,\n      isWritable: true\n    },\n    ownerAssociatedAccountAddress: {\n      value: input.ownerAssociatedAccountAddress ?? null,\n      isWritable: false\n    },\n    ownerTokenMintAddress: {\n      value: input.ownerTokenMintAddress ?? null,\n      isWritable: false\n    },\n    walletAddress: { value: input.walletAddress ?? null, isWritable: true },\n    tokenProgram: { value: input.tokenProgram ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  if (!accounts.tokenProgram.value) {\n    accounts.tokenProgram.value = \"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\";\n  }\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.nestedAssociatedAccountAddress),\n      getAccountMeta(accounts.nestedTokenMintAddress),\n      getAccountMeta(accounts.destinationAssociatedAccountAddress),\n      getAccountMeta(accounts.ownerAssociatedAccountAddress),\n      getAccountMeta(accounts.ownerTokenMintAddress),\n      getAccountMeta(accounts.walletAddress),\n      getAccountMeta(accounts.tokenProgram)\n    ],\n    programAddress,\n    data: getRecoverNestedAssociatedTokenInstructionDataEncoder().encode({})\n  };\n  return instruction;\n}\nfunction parseRecoverNestedAssociatedTokenInstruction(instruction) {\n  if (instruction.accounts.length < 7) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      nestedAssociatedAccountAddress: getNextAccount(),\n      nestedTokenMintAddress: getNextAccount(),\n      destinationAssociatedAccountAddress: getNextAccount(),\n      ownerAssociatedAccountAddress: getNextAccount(),\n      ownerTokenMintAddress: getNextAccount(),\n      walletAddress: getNextAccount(),\n      tokenProgram: getNextAccount()\n    },\n    data: getRecoverNestedAssociatedTokenInstructionDataDecoder().decode(\n      instruction.data\n    )\n  };\n}\nvar REVOKE_DISCRIMINATOR = 5;\nfunction getRevokeDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(REVOKE_DISCRIMINATOR);\n}\nfunction getRevokeInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()]]),\n    (value) => ({ ...value, discriminator: REVOKE_DISCRIMINATOR })\n  );\n}\nfunction getRevokeInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()]]);\n}\nfunction getRevokeInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getRevokeInstructionDataEncoder(),\n    getRevokeInstructionDataDecoder()\n  );\n}\nfunction getRevokeInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    source: { value: input.source ?? null, isWritable: true },\n    owner: { value: input.owner ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const remainingAccounts = (args.multiSigners ?? []).map(\n    (signer) => ({\n      address: signer.address,\n      role: _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.READONLY_SIGNER,\n      signer\n    })\n  );\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.source),\n      getAccountMeta(accounts.owner),\n      ...remainingAccounts\n    ],\n    programAddress,\n    data: getRevokeInstructionDataEncoder().encode({})\n  };\n  return instruction;\n}\nfunction parseRevokeInstruction(instruction) {\n  if (instruction.accounts.length < 2) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      source: getNextAccount(),\n      owner: getNextAccount()\n    },\n    data: getRevokeInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar SET_AUTHORITY_DISCRIMINATOR = 6;\nfunction getSetAuthorityDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(SET_AUTHORITY_DISCRIMINATOR);\n}\nfunction getSetAuthorityInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"authorityType\", getAuthorityTypeEncoder()],\n      [\"newAuthority\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getOptionEncoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressEncoder)())]\n    ]),\n    (value) => ({ ...value, discriminator: SET_AUTHORITY_DISCRIMINATOR })\n  );\n}\nfunction getSetAuthorityInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"authorityType\", getAuthorityTypeDecoder()],\n    [\"newAuthority\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_1__.getOptionDecoder)((0,_solana_kit__WEBPACK_IMPORTED_MODULE_2__.getAddressDecoder)())]\n  ]);\n}\nfunction getSetAuthorityInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getSetAuthorityInstructionDataEncoder(),\n    getSetAuthorityInstructionDataDecoder()\n  );\n}\nfunction getSetAuthorityInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    owned: { value: input.owned ?? null, isWritable: true },\n    owner: { value: input.owner ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const remainingAccounts = (args.multiSigners ?? []).map(\n    (signer) => ({\n      address: signer.address,\n      role: _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.READONLY_SIGNER,\n      signer\n    })\n  );\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.owned),\n      getAccountMeta(accounts.owner),\n      ...remainingAccounts\n    ],\n    programAddress,\n    data: getSetAuthorityInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseSetAuthorityInstruction(instruction) {\n  if (instruction.accounts.length < 2) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      owned: getNextAccount(),\n      owner: getNextAccount()\n    },\n    data: getSetAuthorityInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar SYNC_NATIVE_DISCRIMINATOR = 17;\nfunction getSyncNativeDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(SYNC_NATIVE_DISCRIMINATOR);\n}\nfunction getSyncNativeInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()]]),\n    (value) => ({ ...value, discriminator: SYNC_NATIVE_DISCRIMINATOR })\n  );\n}\nfunction getSyncNativeInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()]]);\n}\nfunction getSyncNativeInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getSyncNativeInstructionDataEncoder(),\n    getSyncNativeInstructionDataDecoder()\n  );\n}\nfunction getSyncNativeInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    account: { value: input.account ?? null, isWritable: true }\n  };\n  const accounts = originalAccounts;\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [getAccountMeta(accounts.account)],\n    programAddress,\n    data: getSyncNativeInstructionDataEncoder().encode({})\n  };\n  return instruction;\n}\nfunction parseSyncNativeInstruction(instruction) {\n  if (instruction.accounts.length < 1) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      account: getNextAccount()\n    },\n    data: getSyncNativeInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar THAW_ACCOUNT_DISCRIMINATOR = 11;\nfunction getThawAccountDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(THAW_ACCOUNT_DISCRIMINATOR);\n}\nfunction getThawAccountInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()]]),\n    (value) => ({ ...value, discriminator: THAW_ACCOUNT_DISCRIMINATOR })\n  );\n}\nfunction getThawAccountInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([[\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()]]);\n}\nfunction getThawAccountInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getThawAccountInstructionDataEncoder(),\n    getThawAccountInstructionDataDecoder()\n  );\n}\nfunction getThawAccountInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    account: { value: input.account ?? null, isWritable: true },\n    mint: { value: input.mint ?? null, isWritable: false },\n    owner: { value: input.owner ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const remainingAccounts = (args.multiSigners ?? []).map(\n    (signer) => ({\n      address: signer.address,\n      role: _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.READONLY_SIGNER,\n      signer\n    })\n  );\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.account),\n      getAccountMeta(accounts.mint),\n      getAccountMeta(accounts.owner),\n      ...remainingAccounts\n    ],\n    programAddress,\n    data: getThawAccountInstructionDataEncoder().encode({})\n  };\n  return instruction;\n}\nfunction parseThawAccountInstruction(instruction) {\n  if (instruction.accounts.length < 3) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      account: getNextAccount(),\n      mint: getNextAccount(),\n      owner: getNextAccount()\n    },\n    data: getThawAccountInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar TRANSFER_DISCRIMINATOR = 3;\nfunction getTransferDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(TRANSFER_DISCRIMINATOR);\n}\nfunction getTransferInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Encoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: TRANSFER_DISCRIMINATOR })\n  );\n}\nfunction getTransferInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Decoder)()]\n  ]);\n}\nfunction getTransferInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getTransferInstructionDataEncoder(),\n    getTransferInstructionDataDecoder()\n  );\n}\nfunction getTransferInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    source: { value: input.source ?? null, isWritable: true },\n    destination: { value: input.destination ?? null, isWritable: true },\n    authority: { value: input.authority ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const remainingAccounts = (args.multiSigners ?? []).map(\n    (signer) => ({\n      address: signer.address,\n      role: _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.READONLY_SIGNER,\n      signer\n    })\n  );\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.source),\n      getAccountMeta(accounts.destination),\n      getAccountMeta(accounts.authority),\n      ...remainingAccounts\n    ],\n    programAddress,\n    data: getTransferInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseTransferInstruction(instruction) {\n  if (instruction.accounts.length < 3) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      source: getNextAccount(),\n      destination: getNextAccount(),\n      authority: getNextAccount()\n    },\n    data: getTransferInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar TRANSFER_CHECKED_DISCRIMINATOR = 12;\nfunction getTransferCheckedDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(TRANSFER_CHECKED_DISCRIMINATOR);\n}\nfunction getTransferCheckedInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Encoder)()],\n      [\"decimals\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: TRANSFER_CHECKED_DISCRIMINATOR })\n  );\n}\nfunction getTransferCheckedInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"amount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU64Decoder)()],\n    [\"decimals\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()]\n  ]);\n}\nfunction getTransferCheckedInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getTransferCheckedInstructionDataEncoder(),\n    getTransferCheckedInstructionDataDecoder()\n  );\n}\nfunction getTransferCheckedInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    source: { value: input.source ?? null, isWritable: true },\n    mint: { value: input.mint ?? null, isWritable: false },\n    destination: { value: input.destination ?? null, isWritable: true },\n    authority: { value: input.authority ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const remainingAccounts = (args.multiSigners ?? []).map(\n    (signer) => ({\n      address: signer.address,\n      role: _solana_kit__WEBPACK_IMPORTED_MODULE_7__.AccountRole.READONLY_SIGNER,\n      signer\n    })\n  );\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [\n      getAccountMeta(accounts.source),\n      getAccountMeta(accounts.mint),\n      getAccountMeta(accounts.destination),\n      getAccountMeta(accounts.authority),\n      ...remainingAccounts\n    ],\n    programAddress,\n    data: getTransferCheckedInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseTransferCheckedInstruction(instruction) {\n  if (instruction.accounts.length < 4) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      source: getNextAccount(),\n      mint: getNextAccount(),\n      destination: getNextAccount(),\n      authority: getNextAccount()\n    },\n    data: getTransferCheckedInstructionDataDecoder().decode(instruction.data)\n  };\n}\nvar UI_AMOUNT_TO_AMOUNT_DISCRIMINATOR = 24;\nfunction getUiAmountToAmountDiscriminatorBytes() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)().encode(UI_AMOUNT_TO_AMOUNT_DISCRIMINATOR);\n}\nfunction getUiAmountToAmountInstructionDataEncoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.transformEncoder)(\n    (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructEncoder)([\n      [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Encoder)()],\n      [\"uiAmount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_9__.getUtf8Encoder)()]\n    ]),\n    (value) => ({ ...value, discriminator: UI_AMOUNT_TO_AMOUNT_DISCRIMINATOR })\n  );\n}\nfunction getUiAmountToAmountInstructionDataDecoder() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_0__.getStructDecoder)([\n    [\"discriminator\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_3__.getU8Decoder)()],\n    [\"uiAmount\", (0,_solana_kit__WEBPACK_IMPORTED_MODULE_9__.getUtf8Decoder)()]\n  ]);\n}\nfunction getUiAmountToAmountInstructionDataCodec() {\n  return (0,_solana_kit__WEBPACK_IMPORTED_MODULE_4__.combineCodec)(\n    getUiAmountToAmountInstructionDataEncoder(),\n    getUiAmountToAmountInstructionDataDecoder()\n  );\n}\nfunction getUiAmountToAmountInstruction(input, config) {\n  const programAddress = config?.programAddress ?? TOKEN_PROGRAM_ADDRESS;\n  const originalAccounts = {\n    mint: { value: input.mint ?? null, isWritable: false }\n  };\n  const accounts = originalAccounts;\n  const args = { ...input };\n  const getAccountMeta = getAccountMetaFactory(programAddress);\n  const instruction = {\n    accounts: [getAccountMeta(accounts.mint)],\n    programAddress,\n    data: getUiAmountToAmountInstructionDataEncoder().encode(\n      args\n    )\n  };\n  return instruction;\n}\nfunction parseUiAmountToAmountInstruction(instruction) {\n  if (instruction.accounts.length < 1) {\n    throw new Error(\"Not enough accounts\");\n  }\n  let accountIndex = 0;\n  const getNextAccount = () => {\n    const accountMeta = instruction.accounts[accountIndex];\n    accountIndex += 1;\n    return accountMeta;\n  };\n  return {\n    programAddress: instruction.programAddress,\n    accounts: {\n      mint: getNextAccount()\n    },\n    data: getUiAmountToAmountInstructionDataDecoder().decode(instruction.data)\n  };\n}\n\n\n//# sourceMappingURL=index.mjs.map\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solana-program/token/dist/src/index.mjs\n");

/***/ })

};
;